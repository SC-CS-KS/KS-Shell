{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil\fcharset2 Symbol;}{\f4\fnil Arial;}{\f5\fnil\fcharset0 Courier New;}}{\colortbl;\red0\green0\blue255;\red0\green128\blue128;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1199602570
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f3\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'00;}{\levelnumbers;}\f4\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid1569871801}
}
{\*\listoverridetable
{\listoverride\listid1569871801\listoverridecount0\ls1}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf3 03.\uc2\u33258 \'d7\'d4\u23450 \'b6\'a8\u20041 \'d2\'e5\u25490 \'c5\'c5\u24207 \'d0\'f2\u20989 \'ba\'af\u25968 \'ca\'fd\uc1
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 #arr               \uc2\u20256 \'b4\'ab\u20837 \'c8\'eb\u19968 \'d2\'bb\u32500 \'ce\'ac\u25968 \'ca\'fd\u32452 \'d7\'e9\uc1
\par #key               \uc2\u25490 \'c5\'c5\u24207 \'d0\'f2\u31867 \'c0\'e0\u22411 \'d0\'cd 1\u26159 \'ca\'c7\u25353 \'b0\'b4\u29031 \'d5\'d5\u20540 \'d6\'b5\u25490 \'c5\'c5\u24207 \'d0\'f2 2\u25353 \'b0\'b4\u29031 \'d5\'d5\u38190 \'bc\'fc\u20540 \'d6\'b5\uc1
\par #datatype          \uc2\u27604 \'b1\'c8\u36739 \'bd\'cf\u31867 \'c0\'e0\u22411 \'d0\'cd 1\u25353 \'b0\'b4\u29031 \'d5\'d5\u25968 \'ca\'fd\u23383 \'d7\'d6\u25490 \'c5\'c5\u24207 \'d0\'f2 2\u25353 \'b0\'b4\u29031 \'d5\'d5\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\u25490 \'c5\'c5\u24207 \'d0\'f2\uc1
\par #tarr              \uc2\u25490 \'c5\'c5\u24207 \'d0\'f2\u36820 \'b7\'b5\u22238 \'bb\'d8\u30340 \'b5\'c4\u25968 \'ca\'fd\u32452 \'d7\'e9\uc1
\par #splitseq          \uc2\u20998 \'b7\'d6\u21106 \'b8\'ee\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae \u25968 \'ca\'fd\u32452 \'d7\'e9\u20013 \'d6\'d0\u38190 \'bc\'fc\u19982 \'d3\'eb\u20540 \'d6\'b5\u20043 \'d6\'ae\u38388 \'bc\'e4\u20998 \'b7\'d6\u21106 \'b8\'ee\u23383 \'d7\'d6\u31526 \'b7\'fb\u20018 \'b4\'ae\uc1
\par #return            \uc2\u25968 \'ca\'fd\u32452 \'d7\'e9\u38271 \'b3\'a4\u24230 \'b6\'c8\uc1
\par #\uc2\u23454 \'ca\'b5\u29616 \'cf\'d6\u24605 \'cb\'bc\u36335 \'c2\'b7\u65292 \'a3\'ac\u23558 \'bd\'ab\u21407 \'d4\'ad\u22987 \'ca\'bc\u25968 \'ca\'fd\u32452 \'d7\'e9a[\lquote a\rquote ]=100 \u25490 \'c5\'c5\u24207 \'d0\'f2\u21518 \'ba\'f3\u21464 \'b1\'e4\u25104 \'b3\'c9 a[1]=a\u20998 \'b7\'d6\u38548 \'b8\'f4\u31526 \'b7\'fb100 \u65292 \'a3\'ac\u28982 \'c8\'bb\u21518 \'ba\'f3\u25353 \'b0\'b4\u29031 \'d5\'d5\u19979 \'cf\'c2\u26631 \'b1\'ea\u36882 \'b5\'dd\u24402 \'b9\'e9\u26174 \'cf\'d4\u31034 \'ca\'be\u20869 \'c4\'da\u23481 \'c8\'dd\u12290 \'a1\'a3 \u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf2 -----------------------------------------------------------------------------------------------------------------------
\par \plain \f1\fs20 \uc2\u20882 \'c3\'b0\u27873 \'c5\'dd\u25490 \'c5\'c5\u24207 \'d0\'f2\u65306 \'a3\'ba\uc1
\par function sortArr(arr,key,datatype,tarr,splitseq)
\par \{
\par     if(key ~ /[^1-2]/) 
\par     \{return tarr;\}
\par     for(k in arr)
\par     \{
\par       tarr[++alen]=(k""splitseq""arr[k]);
\par     \}
\par     for(m=1;m<=alen;m++)
\par     \{
\par         for(n=1;n<=alen-m-1;n++)
\par         \{
\par             split(tarr[m],tm,splitseq);
\par             split(tarr[n+1],tn,splitseq);
\par                 tnum=tarr[m];
\par             if(datatype==1)
\par             \{
\par                 if(tm[key]+0<tn[key]+0)
\par                 \{
\par                      tarr[m]=tarr[n+1];
\par                      tarr[n+1]=tnum;
\par                 \}
\par             \}
\par             else
\par             \{
\par                 if((tm[key]"") < (tn[key]""))
\par                 \{
\par                      tarr[m]=tarr[n+1];
\par                      tarr[n+1]=tnum;
\par                 \}
\par             \}
\par         \}
\par     \}
\par     return alen;
\par \}
\par \plain \f1\fs20\cf2 -----------------------------------------------------------------------------------------------------------------------
\par \plain \f1\fs20 \uc2\u23436 \'cd\'ea\u25972 \'d5\'fb\u20195 \'b4\'fa\u30721 \'c2\'eb\u22914 \'c8\'e7\u19979 \'cf\'c2\u65306 \'a3\'ba\uc1
\par $ awk 'BEGIN\{
\par a["a"]=100;
\par a["b"]=110;
\par a["c"]=10;
\par splitseq="%%";
\par alen=sortArr(a,2,1,tarr,splitseq);
\par for(m=1;m<=alen;m++)
\par \{
\par     split(tarr[m],ta,splitseq);
\par     print m,ta[1],ta[2];
\par \}
\par \}
\par function sortArr(arr,key,datatype,tarr,splitseq)
\par \{
\par     if(key ~ /[^1-2]/) 
\par     \{return tarr;\}
\par     for(k in arr)
\par     \{
\par       tarr[++alen]=(k""splitseq""arr[k]);
\par     \}
\par     for(m=1;m<=alen;m++)
\par     \{
\par         for(n=1;n<=alen-m-1;n++)
\par         \{
\par             split(tarr[m],tm,splitseq);
\par             split(tarr[n+1],tn,splitseq);
\par                 tnum=tarr[m];
\par             if(datatype==1)
\par             \{
\par                 if(tm[key]+0<tn[key]+0)
\par                 \{
\par                      tarr[m]=tarr[n+1];
\par                      tarr[n+1]=tnum;
\par                 \}
\par             \}
\par             else
\par             \{
\par                 if((tm[key]"") < (tn[key]""))
\par                 \{
\par                      tarr[m]=tarr[n+1];
\par                      tarr[n+1]=tnum;
\par                 \}
\par             \}
\par         \}
\par     \}
\par     return alen;
\par \}
\par '
\par 1 b 110
\par 2 a 100
\par 3 c 10
\par \plain \f1\fs20\cf2 -----------------------------------------------------------------------------------------------------------------------\par}