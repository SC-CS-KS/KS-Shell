{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}}{\colortbl;\red0\green0\blue255;\red0\green128\blue128;\red255\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1248953731\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1227860883}
{\list\listtemplateid51047398\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1209120642}
{\list\listtemplateid1662280593\listsimple1
{\listlevel\levelnfc0\leveljc0\li720\fi-360\jclisttab\tx720\levelstartat1{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f3\fs24}
\listid525154778}
}
{\*\listoverridetable
{\listoverride\listid1227860883\listoverridecount0\ls1}
{\listoverride\listid1209120642\listoverridecount0\ls2}
{\listoverride\listid525154778\listoverridecount0\ls3}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf4 ping
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 PING(8)                                         System Manager's Manual: iputils                                         PING(8)
\par NAME
\par \plain \f1\fs20\cf1        ping, ping6 - send ICMP ECHO_REQUEST to network hosts
\par \plain \f1\fs20 
\par SYNOPSIS
\par        ping  [  -LRUbdfnqrvVaAB]   [  -c count]  [ -i interval]  [ -l preload]  [ -p pattern]  [ -s packetsize]  [ -t ttl]  [ -w
\par        deadline]  [ -F flowlabel]  [ -I interface]  [ -M hint]  [ -P policy]  [ -Q tos]  [ -S sndbuf]  [ -T timestamp option]  [
\par        -W timeout]  [ hop ...]  destination
\par 
\par 
\par DESCRIPTION
\par        ping  uses  the  ICMP  protocol's mandatory ECHO_REQUEST datagram to elicit an ICMP ECHO_RESPONSE from a host or gateway.
\par        ECHO_REQUEST datagrams (``pings'') have an IP and ICMP header, followed by a struct timeval and then an arbitrary  number
\par        of ``pad'' bytes used to fill out the packet.
\par 
\par OPTIONS
\par        -a     Audible ping.
\par 
\par        -A     Adaptive  ping. Interpacket interval adapts to round-trip time, so that effectively not more than one (or more, if
\par               preload is set) unanswered probes present in the network. Minimal interval is 200msec for not super-user.  On net-
\par               works with low rtt this mode is essentially equivalent to flood mode.
\par 
\par        -b     Allow pinging a broadcast address.
\par 
\par        -B     Do not allow ping to change source address of probes.  The address is bound to one selected when ping starts.
\par 
\par        -c count
\par               Stop  after  sending  count  ECHO_REQUEST  packets. With deadline option, ping waits for count ECHO_REPLY packets,
\par               until the timeout expires.
\par 
\par        -d     Set the SO_DEBUG option on the socket being used.  Essentially, this socket option is not used by Linux kernel.
\par 
\par        -F flow label
\par               Allocate and set 20 bit flow label on echo request packets.  (Only ping6). If value is zero, kernel allocates ran-
\par               dom flow label.
\par 
\par        -f     Flood  ping. For every ECHO_REQUEST sent a period ``.'' is printed, while for ever ECHO_REPLY received a backspace
\par               is printed.  This provides a rapid display of how many packets are being dropped.  If interval is  not  given,  it
\par               sets  interval to zero and outputs packets as fast as they come back or one hundred times per second, whichever is
\par               more.  Only the super-user may use this option with zero interval.
\par 
\par        -i interval
\par               Wait interval seconds between sending each packet.  The default is to wait for one second between each packet nor-
\par               mally, or not to wait in flood mode. Only super-user may set interval to values less 0.2 seconds.
\par 
\par        -I interface address
\par               Set  source  address  to  specified  interface address. Argument may be numeric IP address or name of device. When
\par               pinging IPv6 link-local address this option is required.
\par 
\par        -l preload
\par               If preload is specified, ping sends that many packets not waiting for  reply.   Only  the  super-user  may  select
\par               preload more than 3.
\par 
\par        -L     Suppress loopback of multicast packets.  This flag only applies if the ping destination is a multicast address.
\par 
\par        -n     Numeric output only.  No attempt will be made to lookup symbolic names for host addresses.
\par 
\par        -P policy
\par               Override  system-wide  IPsec  policy.  Argument  is a string of format described in ipsec_set_policy(3). Couple of
\par               examples: "out bypass" requests to bypass system-wide defaults, "out ipsec esp/transport//require" demands to send
\par               ping packets using ESP in transport mode.
\par 
\par        -p pattern
\par               You may specify up to 16 ``pad'' bytes to fill out the packet you send.  This is useful for diagnosing data-depen-
\par               dent problems in a network.  For example, -p ff will cause the sent packet to be filled with all ones.
\par 
\par        -Q tos Set Quality of Service -related bits in ICMP datagrams.  tos can be either decimal or hex  number.   Traditionally
\par               (RFC1349),  these  have been interpreted as: 0 for reserved (currently being redefined as congestion control), 1-4
\par               for Type of Service and 5-7 for Precedence.  Possible settings for Type of Service are: minimal cost: 0x02, relia-
\par               bility:  0x04,  throughput:  0x08, low delay: 0x10.  Multiple TOS bits should not be set simultaneously.  Possible
\par               settings for special Precedence range from priority (0x20) to net control (0xe0).  You must be root (CAP_NET_ADMIN
\par               capability)  to  use  Critical or higher precedence value.  You cannot set bit 0x01 (reserved) unless ECN has been
\par               enabled in the kernel.  In RFC2474, these fields has been redefined as 8-bit Differentiated  Services  (DS),  con-
\par               sisting  of: bits 0-1 of separate data (ECN will be used, here), and bits 2-7 of Differentiated Services Codepoint
\par               (DSCP).
\par 
\par        -q     Quiet output.  Nothing is displayed except the summary lines at startup time and when finished.
\par 
\par        -R     Record route. (IPv4 only) Includes the RECORD_ROUTE option in the  ECHO_REQUEST  packet  and  displays  the  route
\par               buffer on returned packets.  Note that the IP header is only large enough for nine such routes.  Many hosts ignore
\par               or discard this option.
\par 
\par        -r     Bypass the normal routing tables and send directly to a host on an attached interface.  If the host is  not  on  a
\par               directly-attached  network,  an error is returned.  This option can be used to ping a local host through an inter-
\par               face that has no route through it provided the option -I is also used.
\par 
\par        -s packetsize
\par               Specifies the number of data bytes to be sent.  The default is 56, which translates into 64 ICMP data  bytes  when
\par               combined with the 8 bytes of ICMP header data.
\par 
\par        -S sndbuf
\par               Set socket sndbuf. If not specified, it is selected to buffer not more than one packet.
\par 
\par        -t ttl Set the IP Time to Live.
\par 
\par        -T timestamp option
\par               Set  special IP timestamp options.  timestamp option may be either tsonly (only timestamps), tsandaddr (timestamps
\par               and addresses) or tsprespec host1 [host2 [host3 [host4]]] (timestamp prespecified hops).
\par 
\par        -M hint
\par               Select Path MTU Discovery strategy.  hint may be either do (prohibit fragmentation, even local one), want (do PMTU
\par               discovery, fragment locally when packet size is large), or dont (do not set DF flag).
\par 
\par        -U     Print  full  user-to-user  latency (the old behaviour). Normally ping prints network round trip time, which can be
\par               different f.e. due to DNS failures.
\par 
\par        -v     Verbose output.
\par 
\par        -V     Show version and exit.
\par 
\par        -w deadline
\par               Specify a timeout, in seconds, before ping exits regardless of how many packets have been  sent  or  received.  In
\par               this  case  ping  does  not  stop  after count packet are sent, it waits either for deadline expire or until count
\par               probes are answered or for some error notification from network.
\par \plain \f1\fs20\cf1 
\par        -W timeout
\par               Time to wait for a response, in seconds. The option affects only timeout in absense of  any  responses,  otherwise
\par               ping waits for two RTTs.
\par \plain \f1\fs20 
\par        When using ping for fault isolation, it should first be run on the local host, to verify that the local network interface
\par        is up and running. Then, hosts and gateways further and further away should be ``pinged''. \plain \f1\b\fs20\cf3 Round-trip \uc2\u12304 \'a1\'be\u26469 \'c0\'b4\u22238 \'bb\'d8\u30340 \'b5\'c4\u12289 \'a1\'a2\u21452 \'cb\'ab\u31243 \'b3\'cc\u30340 \'b5\'c4\u12305 \'a1\'bf times\uc1\plain \f1\fs20  \plain \f1\fs20\cf1  and  packet loss  statistics  are computed\plain \f1\fs20 .  If duplicate packets are received, they are not included in the packet loss calculation,
\par        although the round trip time of these packets is used in calculating the minimum/average/maximum round-trip time numbers.
\par        When the specified number of packets have been sent (and received) or if the program is terminated with a SIGINT, a brief
\par        summary is displayed. Shorter current statistics can be obtained without termination of process with signal SIGQUIT.
\par 
\par        If ping does not receive any reply packets at all it will exit with code 1. If a packet count and deadline are both specified, and fewer than count packets
\par        are received by the time the deadline has arrived, it will also exit with code 1.  On other error it exits with code 2. Otherwise it  exits  with  code  0.
\par        This makes it possible to use the exit code to see if a host is alive or not.
\par 
\par        This  program  is  intended  for use in network testing, measurement and management.  Because of the load it can impose on the network, it is unwise to use
\par        ping during normal operations or from automated scripts.
\par 
\par ICMP PACKET DETAILS
\par        An IP header without options is 20 bytes.  An ICMP ECHO_REQUEST packet contains an additional 8 bytes worth of ICMP header followed by an arbitrary  amount
\par        of  data.   When a packetsize is given, this indicated the size of this extra piece of data (the default is 56). Thus the amount of data received inside of
\par        an IP packet of type ICMP ECHO_REPLY will always be 8 bytes more than the requested data space (the ICMP header).
\par 
\par If the data space is at least of size of struct timeval ping uses the beginning bytes of this space to include a timestamp which it uses in the computation
\par        of round trip times.  If the data space is shorter, no round trip times are given.
\par 
\par DUPLICATE AND DAMAGED PACKETS
\par        ping  will  report duplicate and damaged packets.  Duplicate packets should never occur, and seem to be caused by inappropriate link-level retransmissions.
\par        Duplicates may occur in many situations and are rarely (if ever) a good sign, although the presence of low levels of duplicates may not always be cause for
\par        alarm.
\par 
\par        Damaged  packets  are  obviously  serious  cause for alarm and often indicate broken hardware somewhere in the ping packet's path (in the network or in the
\par        hosts).
\par 
\par TRYING DIFFERENT DATA PATTERNS
\par        The (inter)network layer should never treat packets differently depending on the data contained in the data portion.  Unfortunately,  data-dependent  prob-
\par        lems  have  been known to sneak into networks and remain undetected for long periods of time.  In many cases the particular pattern that will have problems
\par        is something that doesn't have sufficient ''transitions'', such as all ones or all zeros, or a pattern right at the edge, such as  almost  all  zeros.   It
\par        isn't  necessarily  enough  to specify a data pattern of all zeros (for example) on the command line because the pattern that is of interest is at the data
\par        link level, and the relationship between what you type and what the controllers transmit can be complicated.
\par 
\par        This means that if you have a data-dependent problem you will probably have to do a lot of testing to find it.  If you are lucky, you may manage to find  a
\par        file  that  either can't be sent across your network or that takes much longer to transfer than other similar length files.  You can then examine this file
\par        for repeated patterns that you can test using the -p option of ping.
\par 
\par TTL DETAILS
\par        The TTL value of an IP packet represents the maximum number of IP routers that the packet can go through before being thrown away.  In current practice you
\par        can expect each router in the Internet to decrement the TTL field by exactly one.
\par 
\par        The TCP/IP specification states that the TTL field for TCP packets should be set to 60, but many systems use smaller values (4.3 BSD uses 30, 4.2 used 15).
\par 
\par        The maximum possible value of this field is 255, and most Unix systems set the TTL field of ICMP ECHO_REQUEST packets to 255.  This is why  you  will  find
\par        you can ''ping'' some hosts, but not reach them with telnet(1) or ftp(1).
\par 
\par        In normal operation ping prints the ttl value from the packet it receives.  When a remote system receives a ping packet, it can do one of three things with
\par        the TTL field in its response:
\par 
\par        ?Not change it; this is what Berkeley Unix systems did before the 4.3BSD Tahoe release. In this case the TTL value in the  received  packet  will  be  255
\par          minus the number of routers in the round-trip path.
\par 
\par        ?Set  it to 255; this is what current Berkeley Unix systems do.  In this case the TTL value in the received packet will be 255 minus the number of routers
\par          in the path from the remote system to the pinging host.
\par 
\par        ?Set it to some other value. Some machines use the same value for ICMP packets that they use for TCP packets, for example either 30 or 60.  Others may use
\par          completely wild values.
\par 
\par BUGS
\par        ?Many Hosts and Gateways ignore the RECORD_ROUTE option.
\par 
\par        ?The maximum IP header length is too small for options like RECORD_ROUTE to be completely useful.  There's not much that that can be done about this, how-
\par          ever.
\par 
\par        ?Flood pinging is not recommended in general, and flood pinging the broadcast address should only be done under very controlled conditions.
\par 
\par SEE ALSO
\par        netstat(1), ifconfig(8).
\par 
\par HISTORY
\par        The ping command appeared in 4.3BSD.
\par 
\par        The version described here is its descendant specific to Linux.
\par 
\par SECURITY
\par        ping requires CAP_NET_RAWIO capability to be executed. It may be used as set-uid root.
\par 
\par AVAILABILITY
\par        ping is part of iputils package and the latest versions are   available  in  source  form  for  anonymous  ftp  ftp://ftp.inr.ac.ru/ip-routing/iputils-cur-
\par        rent.tar.gz.
\par 
\par iputils-020927                                                           27 September 2002                                                                 PING(8)\par}