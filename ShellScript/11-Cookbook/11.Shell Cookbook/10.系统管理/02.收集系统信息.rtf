{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}}{\colortbl;\red0\green0\blue255;\red255\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid60825540\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1151725782}
}
{\*\listoverridetable
{\listoverride\listid1151725782\listoverridecount0\ls1}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf3 02.\uc2\u25910 \'ca\'d5\u38598 \'bc\'af\u31995 \'cf\'b5\u32479 \'cd\'b3\u20449 \'d0\'c5\u24687 \'cf\'a2\uc1
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 #!/bin/bash
\par ################################################################################
\par #
\par # \~This script captures basic information for when a problem occurs.
\par # \~It \~ can be used any time a problem occurs, as root or as a mortal user.
\par #
\par ################################################################################
\par usage=\plain \f1\fs20\cf1 "Usage: vacuum [ -thorough | -perf | -hang <pid> | -trap | -error <cmd> ]"
\par mode_thorough=0
\par mode_perf=0
\par mode_hang=0
\par mode_trap=0
\par mode_error=0
\par 
\par \plain \f1\fs20 topdir="" \~ \~ \~ \~ \~# The data collection directory
\par 
\par if [ -n $HOME ]
\par then
\par \~ \~topdir=$HOME/investigations
\par else
\par \~ \~topdir=~/investigations/$i
\par fi
\par 
\par \plain \f1\fs20\cf1 if [ $# -gt 0 ]
\par \plain \f1\fs20 then
\par \plain \f1\fs20\cf2 \~ \~while true ; do
\par \plain \f1\fs20 \~ \~ \~ case $1 in
\par \plain \f1\fs20\cf1 \~ \~ \~ \~ \~"-thorough" )
\par \plain \f1\fs20 \~ \~ \~ \~ \~ \~ mode_thorough=1
\par \~ \~ \~ \~ \~ \~ shift
\par \~ \~ \~ \~ \~;;
\par \plain \f1\fs20\cf1 \~ \~ \~ \~ \~"-perf" )
\par \plain \f1\fs20 \~ \~ \~ \~ \~ \~ mode_perf=1
\par \~ \~ \~ \~ \~ \~ mode="PERF"
\par \~ \~ \~ \~ \~ \~ shift
\par \~ \~ \~ \~ \~;;
\par \plain \f1\fs20\cf1 \~ \~ \~ \~ \~"-hang" )
\par \plain \f1\fs20 \~ \~ \~ \~ \~ \~ mode_hang=1
\par \~ \~ \~ \~ \~ \~ shift
\par \~ \~ \~ \~ \~ \~ if [ $# -le 0 ]
\par \~ \~ \~ \~ \~ \~ then
\par \~ \~ \~ \~ \~ \~ \~ \~echo $usage
\par \~ \~ \~ \~ \~ \~ \~ \~exit 2
\par \~ \~ \~ \~ \~ \~ fi
\par \~ \~ \~ \~ \~ \~ pid=$1
\par \~ \~ \~ \~ \~shift
\par \~ \~ \~ \~ \~;;
\par \plain \f1\fs20\cf1 \~ \~ \~ \~ \~"-trap" )
\par \plain \f1\fs20 \~ \~ \~ \~ \~ \~ mode_trap=1
\par \~ \~ \~ \~ \~ \~ shift412 Data Collection Script
\par \~ \~ \~ \~ \~ \~ ;;
\par \plain \f1\fs20\cf1 \~ \~ \~ \~ \~"-error" )
\par \plain \f1\fs20 \~ \~ \~ \~ \~ \~ mode_error=1
\par \~ \~ \~ \~ \~ \~ shift
\par \~ \~ \~ \~ \~ \~ if [ $# -le 0 ]
\par \~ \~ \~ \~ \~ \~ then
\par \~ \~ \~ \~ \~ \~ \~ \~echo $usage
\par \~ \~ \~ \~ \~ \~ \~ \~exit 2
\par \~ \~ \~ \~ \~ \~ fi
\par \~ \~ \~ \~ \~ \~ cmd=$1
\par \~ \~ \~ \~ \~ \~ shift
\par \~ \~ \~ \~ \~;;
\par \~ \~ \~ \~ \~* )
\par \~ \~ \~ \~ \~ \~ echo $usage
\par \~ \~ \~ \~ \~ \~ exit 2
\par \~ \~ \~ \~ \~;;
\par \~ \~ \~ esac
\par 
\par \~ \~ \~ if [ $# -le 0 ]
\par \~ \~ \~ then
\par \~ \~ \~ \~ \~break ;
\par \~ \~ \~ fi
\par 
\par \~ \~done
\par fi
\par 
\par if [ ! -n $USER ]
\par then
\par \~ \~USER=\lquote whoami\lquote 
\par fi
\par 
\par ################################################################################
\par ## \~Create the appropriate directory for this problem
\par ################################################################################
\par i=0
\par invdir=$topdir/$i
\par while [ -d $invdir ]
\par do
\par \~ \~let "i = i + 1"
\par \~ \~invdir=$topdir/$i
\par done
\par echo Investigation directory: $invdir
\par 
\par ################################################################################
\par ## \~Create data directory, src directory and the investigation log
\par ################################################################################
\par mkdir $invdir
\par mkdir $invdir/src
\par datadir=$invdir/data413
\par invlog=$invdir/log
\par mkdir $datadir
\par touch $invlog
\par echo "################################################################################"
\par >> $invlog
\par echo "## \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ Header
\par ##" >> $invlog
\par echo "################################################################################"
\par >> $invlog
\par echo "Problem number \~ \~ \~ \~ \~ \~ \~ \~: $i" >> $invlog
\par echo -n "Time of data collector run \~ \~: " >> $invlog
\par date >> $invlog
\par echo "Data collector run as \~ \~ \~ \~ : \\"$0 $1 $2\\" " >> $invlog
\par 
\par ################################################################################
\par ## \~Ready to go...
\par ################################################################################
\par \plain \f1\fs20\cf1 function collectFile
\par \plain \f1\fs20 \{
\par \~ \~local comment=$1
\par \~ \~local fileName=$2
\par \~ \~local output=""
\par \~ \~echo -n "COLLECT: $fileName ($comment) ... " >> $invlog
\par \~ \~output='cp $fileName $datadir 2>&1'
\par \~ \~if [ $? -ne 0 ]
\par \~ \~then
\par \~ \~ \~ echo "failed." >> $invlog
\par \~ \~ \~ echo "output from copy:" >> $invlog
\par \~ \~ \~ echo '\{' >> $invlog
\par \~ \~ \~ echo $output >> $invlog
\par \~ \~ \~ echo '\}' >> $invlog
\par \~ \~else
\par \~ \~ \~ echo "success." >> $invlog
\par \~ \~fi
\par \~ \~echo >> $invlog
\par \}
\par 
\par \plain \f1\fs20\cf1 function runCommand
\par \plain \f1\fs20 \{
\par \~ \~local comment=$1
\par \~ \~local cmd=$2
\par \~ \~echo "RUNCMD: $cmd ($comment) ... " >> $invlog
\par \~ \~echo '\{' >> $invlog
\par \~ \~$cmd 2>&1 >> $invlog 2>&1
\par \~ \~echo '\}' >> $invlog
\par \~ \~echo >> $invlog
\par \}
\par 
\par \plain \f1\fs20\cf1 function doQuickCollect
\par \plain \f1\fs20 \{
\par \~ \~echo >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~echo "## Quick Collect ##" >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~#Environmental information
\par \~ \~runCommand \~"Environment variables" \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/bin/env"
\par \~ \~#Network information
\par \~ \~collectFile "DNS resolution configuration file" \~ \~ \~ "/etc/resolv.conf"
\par \~ \~collectFile "Name service switch configuration file" \~"/etc/nsswitch.conf"
\par \~ \~collectFile "Static table lookup file" \~ \~ \~ \~ \~ \~ \~ \~"/etc/hosts"
\par \~ \~collectFile "TCP/IP services file" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/etc/services"
\par \~ \~runCommand \~"Interface information" \~ \~ \~ \~ \~ \~ \~ \~ \~ "ifconfig -a"
\par \~ \~runCommand \~"Interface information (no DNS)" \~ \~ \~ \~ \~"/bin/netstat -i -n"
\par \~ \~runCommand \~"Socket information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/bin/netstat -an"
\par \~ \~runCommand \~"Extended socket information" \~ \~ \~ \~ \~ \~ "/bin/netstat -avn"
\par \~ \~runCommand \~"Socket owner information" \~ \~ \~ \~ \~ \~ \~ \~"/bin/netstat -p"
\par \~ \~runCommand \~"Network routing table" \~ \~ \~ \~ \~ \~ \~ \~ \~ "/bin/netstat -rn"
\par \~ \~runCommand \~"Network statistics" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/bin/netstat -s"
\par \~ \~runCommand \~"Extended routing information" \~ \~ \~ \~ \~ \~"/bin/netstat -rvn"
\par \~ \~## the grep commands below look odd but it is a simple trick to get the contents of
\par \~ \~## everything under specific directories415
\par \~ \~runCommand \~"Network information from /proc" "/usr/bin/find /proc/net -type f -exec /bin/grep -Hv '^$' \{\} "
\par \~ \~runCommand \~"System information from /proc" "/usr/bin/find /proc/sys -type f -exec /bin/grep -Hv '^$' \{\} "
\par \~ \~runCommand \~"SYSV IPC info from /proc" '/usr/bin/find /proc/sysvipc -type f -exec /bin/grep -Hv ^$ \{\} ;'
\par \~ \~#File system information
\par \~ \~runCommand \~"Type information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/bin/df -lT"
\par \~ \~runCommand \~"Usage information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/bin/df -lk"
\par \~ \~runCommand \~"Inode information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/bin/df -li"
\par \~ \~runCommand \~"Share information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/sbin/showmount -e"
\par \~ \~runCommand \~"SCSI and IDE disk partition tables" \~ \~ \~"/sbin/fdisk -l /dev/sd* /dev/hd*"
\par \~ \~runCommand \~"NFS statistic" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/sbin/nfsstat -cnrs"
\par \~ \~collectFile "Filesystems supported by the kernel" \~ \~ "/proc/filesystems"
\par \~ \~collectFile "Export file" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/etc/exports"
\par \~ \~collectFile "Mount file" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/etc/fstab"
\par \~ \~collectFile "Partition information" \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/partitions"
\par \~ \~#Kernel information
\par \~ \~runCommand "User (resource) limits" \~ \~ \~ \~ \~ \~ \~ \~ \~"ulimit -a"
\par \~ \~runCommand "IPC information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/bin/ipcs -a"
\par \~ \~runCommand "Loaded module info" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/sbin/lsmod"
\par \~ \~runCommand "IPC resource limits" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/bin/ipcs -l"
\par \~ \~runCommand "Kernel information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/sbin/sysctl -a"
\par \~ \~runCommand "Memory usage" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/usr/bin/free"
\par \~ \~runCommand "Uptime" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/usr/bin/uptime"
\par \~ \~runCommand "System name, etc" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/bin/uname -a"
\par \~ \~runCommand "Current users" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/bin/w"
\par \~ \~runCommand "Process listing" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/bin/ps auwx"
\par \~ \~runCommand "Recent users" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/usr/bin/last|/usr/bin/head -100"
\par \~ \~runCommand "Contents of home directory" \~ \~ \~ \~ \~ \~ \~"/bin/ls -lda $HOME"
\par \~ \~runCommand "Host ID" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/bin/hostid"
\par \~ \~collectFile "Kernel limits specified by the user" \~ \~"/etc/sysctl.conf"
\par \~ \~collectFile "Load average" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/loadavg"
\par \~ \~collectFile "I/O memory map" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/iomap"
\par \~ \~collectFile "I/O port regions" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/ioports"
\par \~ \~collectFile "Interrupts per each IRQ" \~ \~ \~ \~ \~ \~ \~ \~"/proc/interupts"
\par \~ \~collectFile "CPU status" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/cpuinfo"
\par \~ \~collectFile "Memory usage" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/meminfo"
\par \~ \~collectFile "Swap partition information" \~ \~ \~ \~ \~ \~ "/proc/swaps"
\par \~ \~collectFile "Slab information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/slabinfo"
\par \~ \~collectFile "Lock information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/locks"
\par \~ \~collectFile "Module information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/proc/modules"
\par \~ \~collectFile "Version information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/proc/version"
\par \~ \~collectFile "System status information" \~ \~ \~ \~ \~ \~ \~"/proc/stat"
\par \~ \~collectFile "PCI information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/proc/pci"
\par \~ \~#Version information
\par \~ \~runCommand "Package information" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/bin/rpm -qa"
\par \~ \~#Misc
\par \~ \~collectFile "Main syslog file" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/var/log/messages"
\par \~ \~ \~ collectFile \~"Syslog \~configuration \~file" \~ \~ \~ \~"/etc/syslog.conf"
\par \}
\par 
\par \plain \f1\fs20\cf1 function doThoroughCollect
\par \plain \f1\fs20 \{
\par \~ \~echo >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~ \~ echo \~"## Thorough \~Collect ##" >> $invlog
\par \~ \~ \~ echo \~"################################################################################"
\par >> $invlog
\par \~ \~runCommand "Virtual memory statistics" \~ \~ \~ \~ \~ \~ \~ \~ \~"/usr/bin/vmstat 2 5"
\par \~ \~runCommand "I/O statistics" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/bin/iostat 2 5"
\par \~ \~runCommand "Extended I/O statistics" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/usr/bin/iostat -x 2 5"417
\par \~ \~runCommand "CPU statistics" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ "/usr/bin/mpstat -P ALL 2 5"
\par \~ \~runCommand "System activity" \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~ \~"/usr/bin/sar -A 2 5"
\par \}
\par 
\par \plain \f1\fs20\cf1 function doPerfCollect
\par \plain \f1\fs20 \{
\par \~ \~echo >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~echo "## Performance Collect ##" >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~# Add specific commands here
\par \}
\par 
\par \plain \f1\fs20\cf1 function doHangCollect
\par \plain \f1\fs20 \{
\par \~ \~echo >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~ \~ echo \~"## Hang \~Collect ##" >> $invlog
\par \~ \~ \~ echo \~"################################################################################"
\par >> $invlog
\par \~ \~# NOTE: $pid contains the process ID of the process that is hanging
\par \~ \~## check whether the process actually exists
\par \~ \~kill -0 $pid 2>/dev/null 1>/dev/null
\par \~ \~if [ ! $? -eq 0 ]
\par \~ \~then
\par \~ \~ \~ echo "Process ID \\"$pid\\" not found."
\par \~ \~ \~ exit 3
\par \~ \~fi
\par \~ \~# Add specific commands here
\par \}
\par 
\par \plain \f1\fs20\cf1 function doErrorCollect
\par \plain \f1\fs20 \{
\par \~ \~echo >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~ \~ echo \~"## Error \~Collect ##" >> $invlog
\par \~ \~ \~ echo \~"################################################################################"
\par >> $invlog
\par \~ \~# NOTE: $cmd contains the name of the command line that apparently produces an error
\par \~ \~# Add specific commands here
\par \}
\par 
\par \plain \f1\fs20\cf1 function doTrapCollect
\par \plain \f1\fs20 \{
\par \~ \~echo >> $invlog
\par \~ \~echo "################################################################################"
\par >> $invlog
\par \~ \~ \~ echo \~"## Trap \~Collect ##" >> $invlog
\par \~ \~ \~ echo "################################################################################"
\par >> $invlog
\par \~ \~# Add specific commands here
\par \}
\par ######################################MAIN SCRIPT BODY######################################
\par ## Do the basics first, then anything else that might be needed
\par ##
\par 
\par doQuickCollect
\par 
\par if [ $mode_thorough -eq 1 ]
\par then
\par \~ \~echo "Collecting thorough information"
\par \~ \~doThoroughCollect
\par fi
\par 
\par if [ $mode_perf -eq 1 ]
\par then
\par \~ \~echo "Collecting perf information"
\par \~ \~doPerfCollect
\par fi
\par 
\par if [ $mode_hang -eq 1 ]
\par then
\par \~ \~echo "Collecting hang information" \~ doHangCollect
\par fi
\par 
\par if [ $mode_trap -eq 1 ]
\par then
\par \~ \~echo "Collecting trap information"
\par \~ \~doTrapCollect
\par fi
\par 
\par if [ $mode_error -eq 1 ]
\par then
\par \~ \~echo "Collecting error information"
\par \~ \~doErrorCollect
\par fi
\par 
\par echo >> $invlog
\par echo "################################################################################"
\par >> $invlog
\par echo \~"##End of Data Collection (the rest is for userinvestigation)##" >> $invlog
\par echo \~"################################################################################"
\par >> $invlog\par}