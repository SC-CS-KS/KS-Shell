{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}}{\colortbl;\red0\green0\blue255;\red0\green128\blue128;\red255\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1703910314\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1030370903}
{\list\listtemplateid1708404149\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid40287374}
{\list\listtemplateid1571760328\listsimple1
{\listlevel\levelnfc0\leveljc0\li720\fi-360\jclisttab\tx720\levelstartat1{\leveltext\'02\'00.;}{\levelnumbers\'01;}\f3\fs24}
\listid867921901}
}
{\*\listoverridetable
{\listoverride\listid1030370903\listoverridecount0\ls1}
{\listoverride\listid40287374\listoverridecount0\ls2}
{\listoverride\listid867921901\listoverridecount0\ls3}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf4 od
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\b\fs20 od (octal dump)
\par \plain \f1\fs20 \uc2\u21629 \'c3\'fc\u20196 \'c1\'ee\u21487 \'bf\'c9\u20197 \'d2\'d4\u20197 \'d2\'d4\uc1\plain \f1\fs20\cf1 \uc2\u21313 \'ca\'ae\u36827 \'bd\'f8\u21046 \'d6\'c6\u12289 \'a1\'a2\u20843 \'b0\'cb\u36827 \'bd\'f8\u21046 \'d6\'c6\u12289 \'a1\'a2\u21313 \'ca\'ae\u20845 \'c1\'f9\u36827 \'bd\'f8\u21046 \'d6\'c6\u21644 \'ba\'cdASCII\u30721 \'c2\'eb\u26469 \'c0\'b4\u26174 \'cf\'d4\u31034 \'ca\'be\u25991 \'ce\'c4\u20214 \'bc\'fe\u25110 \'bb\'f2\u32773 \'d5\'df\u27969 \'c1\'f7\u12290 \'a1\'a3\uc1
\par \uc2\u23545 \'b6\'d4\u20110 \'d3\'da\u35775 \'b7\'c3\u38382 \'ce\'ca\u25110 \'bb\'f2\u21487 \'bf\'c9\u35270 \'ca\'d3\u22320 \'b5\'d8\u26816 \'bc\'ec\u26597 \'b2\'e9\u25991 \'ce\'c4\u20214 \'bc\'fe\u20013 \'d6\'d0\u19981 \'b2\'bb\u33021 \'c4\'dc\u30452 \'d6\'b1\u25509 \'bd\'d3\u26174 \'cf\'d4\u31034 \'ca\'be\u22312 \'d4\'da\u32456 \'d6\'d5\u31471 \'b6\'cb\u19978 \'c9\'cf\u30340 \'b5\'c4\u23383 \'d7\'d6\u31526 \'b7\'fb\u24456 \'ba\'dc\u26377 \'d3\'d0\u29992 \'d3\'c3\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf2 -----------------------------------------------------------------------------------------------------------------------------
\par \plain \f1\b\fs20 \uc2\u35821 \'d3\'ef\u27861 \'b7\'a8\u65306 \'a3\'ba\uc1\plain \f1\fs20 od \uc2\u65339 \'a3\'db\u36873 \'d1\'a1\u39033 \'cf\'ee\u65341 \'a3\'dd \u25991 \'ce\'c4\u20214 \'bc\'fe\u8230 \'a1\'ad\~\uc1
\par \uc2\u21629 \'c3\'fc\u20196 \'c1\'ee\u20013 \'d6\'d0\u21508 \'b8\'f7\u36873 \'d1\'a1\u39033 \'cf\'ee\u30340 \'b5\'c4\u21547 \'ba\'ac\u20041 \'d2\'e5\u65306 \'a3\'ba\uc1
\par \plain \f1\fs20\cf1 -A \uc2\u25351 \'d6\'b8\u23450 \'b6\'a8\u22320 \'b5\'d8\u22336 \'d6\'b7\u22522 \'bb\'f9\u25968 \'ca\'fd\u65292 \'a3\'ac\u21253 \'b0\'fc\u25324 \'c0\'a8\u65306 \'a3\'ba\uc1
\par \plain \f1\fs20 d \uc2\u21313 \'ca\'ae\u36827 \'bd\'f8\u21046 \'d6\'c6\uc1
\par o \uc2\u20843 \'b0\'cb\u36827 \'bd\'f8\u21046 \'d6\'c6\u65288 \'a3\'a8\u31995 \'cf\'b5\u32479 \'cd\'b3\u40664 \'c4\'ac\u35748 \'c8\'cf\u20540 \'d6\'b5\u65289 \'a3\'a9\uc1
\par x \uc2\u21313 \'ca\'ae\u20845 \'c1\'f9\u36827 \'bd\'f8\u21046 \'d6\'c6\uc1
\par n \uc2\u19981 \'b2\'bb\u25171 \'b4\'f2\u21360 \'d3\'a1\u20301 \'ce\'bb\u31227 \'d2\'c6\u20540 \'d6\'b5\uc1
\par 
\par \plain \f1\fs20\cf1 -t  \uc2\u25351 \'d6\'b8\u23450 \'b6\'a8\u25968 \'ca\'fd\u25454 \'be\'dd\u30340 \'b5\'c4\u26174 \'cf\'d4\u31034 \'ca\'be\u26684 \'b8\'f1\u24335 \'ca\'bd\u65292 \'a3\'ac\u20027 \'d6\'f7\u35201 \'d2\'aa\u30340 \'b5\'c4\u21442 \'b2\'ce\u25968 \'ca\'fd\u26377 \'d3\'d0\u65306 \'a3\'ba\uc1
\par \plain \f1\fs20 c ASCII\uc2\u23383 \'d7\'d6\u31526 \'b7\'fb\u25110 \'bb\'f2\u21453 \'b7\'b4\u26012 \'d0\'b1\u26464 \'b8\'dc\u24207 \'d0\'f2\u21015 \'c1\'d0\uc1
\par d \uc2\u26377 \'d3\'d0\u31526 \'b7\'fb\u21495 \'ba\'c5\u21313 \'ca\'ae\u36827 \'bd\'f8\u21046 \'d6\'c6\u25968 \'ca\'fd\uc1
\par f \uc2\u28014 \'b8\'a1\u28857 \'b5\'e3\u25968 \'ca\'fd\uc1
\par o \uc2\u20843 \'b0\'cb\u36827 \'bd\'f8\u21046 \'d6\'c6\u65288 \'a3\'a8\u31995 \'cf\'b5\u32479 \'cd\'b3\u40664 \'c4\'ac\u35748 \'c8\'cf\u20540 \'d6\'b5\u20026 \'ce\'aa02\u65289 \'a3\'a9\uc1
\par \plain \f1\fs20\cf3 u \uc2\u26080 \'ce\'de\u31526 \'b7\'fb\u21495 \'ba\'c5\u21313 \'ca\'ae\u36827 \'bd\'f8\u21046 \'d6\'c6\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 x \uc2\u21313 \'ca\'ae\u20845 \'c1\'f9\u36827 \'bd\'f8\u21046 \'d6\'c6\u25968 \'ca\'fd\uc1
\par 
\par \plain \f1\fs20\cf1 \uc2\u38500 \'b3\'fd\u20102 \'c1\'cb\u36873 \'d1\'a1\u39033 \'cf\'eec\u20197 \'d2\'d4\u22806 \'cd\'e2\u30340 \'b5\'c4\u20854 \'c6\'e4\u20182 \'cb\'fb\u36873 \'d1\'a1\u39033 \'cf\'ee\u21518 \'ba\'f3\u38754 \'c3\'e6\u37117 \'b6\'bc\u21487 \'bf\'c9\u20197 \'d2\'d4\u36319 \'b8\'fa\u19968 \'d2\'bb\u20010 \'b8\'f6\u21313 \'ca\'ae\u36827 \'bd\'f8\u21046 \'d6\'c6\u25968 \'ca\'fdn\u65292 \'a3\'ac\u25351 \'d6\'b8\u23450 \'b6\'a8\u27599 \'c3\'bf\u20010 \'b8\'f6\u26174 \'cf\'d4\u31034 \'ca\'be\u20540 \'d6\'b5\u25152 \'cb\'f9\u21253 \'b0\'fc\u21547 \'ba\'ac\u30340 \'b5\'c4\u23383 \'d7\'d6\u33410 \'bd\'da\u25968 \'ca\'fd\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf2 -----------------------------------------------------------------------------------------------------------------------------
\par \plain \f1\b\fs20 \uc2\u35828 \'cb\'b5\u26126 \'c3\'f7\uc1\plain \f1\fs20 \uc2\u65306 \'a3\'ba\uc1
\par \plain \f1\fs20\cf1 od\uc2\u21629 \'c3\'fc\u20196 \'c1\'ee\u31995 \'cf\'b5\u32479 \'cd\'b3\u40664 \'c4\'ac\u35748 \'c8\'cf\u30340 \'b5\'c4\u26174 \'cf\'d4\u31034 \'ca\'be\u26041 \'b7\'bd\u24335 \'ca\'bd\u26159 \'ca\'c7\u20843 \'b0\'cb\u36827 \'bd\'f8\u21046 \'d6\'c6\u65292 \'a3\'ac\u36825 \'d5\'e2\u20063 \'d2\'b2\u26159 \'ca\'c7\u35813 \'b8\'c3\u21629 \'c3\'fc\u20196 \'c1\'ee\u30340 \'b5\'c4\u21517 \'c3\'fb\u31216 \'b3\'c6\u30001 \'d3\'c9\u26469 \'c0\'b4\u65288 \'a3\'a8Octal Dump\u65289 \'a3\'a9\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 \uc2\u20294 \'b5\'ab\u36825 \'d5\'e2\u19981 \'b2\'bb\u26159 \'ca\'c7\u26368 \'d7\'ee\u26377 \'d3\'d0\u29992 \'d3\'c3\u30340 \'b5\'c4\u26174 \'cf\'d4\u31034 \'ca\'be\u26041 \'b7\'bd\u24335 \'ca\'bd\u65292 \'a3\'ac\u29992 \'d3\'c3ASCII\u30721 \'c2\'eb\u21644 \'ba\'cd\u21313 \'ca\'ae\u20845 \'c1\'f9\u36827 \'bd\'f8\u21046 \'d6\'c6\u32452 \'d7\'e9\u21512 \'ba\'cf\u30340 \'b5\'c4\u26041 \'b7\'bd\u24335 \'ca\'bd\u33021 \'c4\'dc\u25552 \'cc\'e1\u20379 \'b9\'a9\u26356 \'b8\'fc\u26377 \'d3\'d0\u20215 \'bc\'db\u20540 \'d6\'b5\u30340 \'b5\'c4\u20449 \'d0\'c5\u24687 \'cf\'a2\u36755 \'ca\'e4\u20986 \'b3\'f6\u12290 \'a1\'a3\uc1
\par od -h \uc2\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\uc1
\par \plain \f1\fs20\cf2 -----------------------------------------------------------------------------------------------------------------------------
\par \plain \f1\fs18 NAME
\par \plain \f1\fs18\cf1        od - dump files in octal and other formats
\par \plain \f1\fs18 SYNOPSIS
\par        od [OPTION]... [FILE]...
\par        od [-abcdfilosx]... [FILE] [[+]OFFSET[.][b]]
\par        od --traditional [OPTION]... [FILE] [[+]OFFSET[.][b] [+][LABEL][.][b]]
\par DESCRIPTION
\par        Write  an  unambiguous representation, octal bytes by default, of FILE to standard output.  With more than one FILE argu-
\par        ment, concatenate them in the listed order to form the input.  With no FILE, or when FILE is -, read standard input.
\par        All arguments to long options are mandatory for short options.
\par        -A, --address-radix=RADIX
\par               decide how file offsets are printed
\par        -j, --skip-bytes=BYTES
\par               skip BYTES input bytes first
\par        -N, --read-bytes=BYTES
\par               limit dump to BYTES input bytes
\par        -S, --strings[=BYTES]
\par               output strings of at least BYTES graphic chars
\par        -t, --format=TYPE
\par               select output format or formats
\par        -v, --output-duplicates
\par               do not use * to mark line suppression
\par        -w, --width[=BYTES]
\par               output BYTES bytes per output line
\par        --traditional
\par               accept arguments in traditional form
\par        --help display this help and exit
\par        --version
\par               output version information and exit
\par 
\par    Traditional format specifications may be intermixed; they accumulate:
\par        -a     same as -t a, \plain \f1\fs18\cf1  select named characters, ignoring high-order bit
\par \plain \f1\fs18        -b     same as -t o1, \plain \f1\fs18\cf1 select octal bytes
\par \plain \f1\fs18        -c     same as -t c,  select ASCII characters or \plain \f1\fs18\cf1 backslash escapes
\par \plain \f1\fs18        -d     same as -t u2, select unsigned decimal 2-byte units
\par        -f     same as -t fF, select floats
\par        -i     same as -t dI, select decimal ints
\par        -l     same as -t dL, select decimal longs
\par        -o     same as -t o2, select octal 2-byte units
\par        -s     same as -t d2, select decimal 2-byte units
\par        -x     same as -t x2, select hexadecimal 2-byte units
\par 
\par        If first and second call formats both apply, the second format is assumed if the last operand begins with + or (if  there
\par        are  2  operands) a digit.  An OFFSET operand means -j OFFSET.  LABEL is the pseudo-address at first byte printed, incre-
\par        mented when dump is progressing.  For OFFSET and LABEL, a 0x or 0X prefix indicates hexadecimal; suffixes may  be  .  for
\par        octal and b for multiply by 512.
\par 
\par        TYPE is made up of one or more of these specifications:
\par        a      named character, ignoring high-order bit
\par        c      ASCII character or backslash escape
\par        d[SIZE]
\par               signed decimal, SIZE bytes per integer
\par        f[SIZE]
\par               floating point, SIZE bytes per integer
\par        o[SIZE]
\par               octal, SIZE bytes per integer
\par        u[SIZE]
\par               unsigned decimal, SIZE bytes per integer
\par        x[SIZE]
\par               hexadecimal, SIZE bytes per integer
\par 
\par        SIZE is a number.  For TYPE in doux, SIZE may also be C for sizeof(char), S for sizeof(short), I for sizeof(int) or L for
\par        sizeof(long).  If TYPE is f, SIZE may also be F for sizeof(float), D for sizeof(double) or L for sizeof(long double).
\par 
\par        RADIX is d for decimal, o for octal, x for hexadecimal or n for none.  BYTES is hexadecimal with 0x or 0X prefix, and may
\par        have  a multiplier suffix: b 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024, GB 1000*1000*1000, G 1024*1024*1024, and so
\par        on for T, P, E, Z, Y.  Adding a z suffix to any type displays printable characters  at  the  end  of  each  output  line.
\par        --string without a number implies 3.  --width without a number implies 32.  By default, od uses -A o -t d2 -w16.
\par \plain \f1\fs18\cf2 -----------------------------------------------------------------------------------------------------------------------------\par}