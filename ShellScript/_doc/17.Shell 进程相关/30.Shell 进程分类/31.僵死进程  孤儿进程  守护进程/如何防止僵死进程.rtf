{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}}{\colortbl;\red0\green0\blue255;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1255169387\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid832406300}
{\list\listtemplateid747782542\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1294009290}
}
{\*\listoverridetable
{\listoverride\listid832406300\listoverridecount0\ls1}
{\listoverride\listid1294009290\listoverridecount0\ls2}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf2 \uc2\u22914 \'c8\'e7\u20309 \'ba\'ce\u38450 \'b7\'c0\u27490 \'d6\'b9\u20725 \'bd\'a9\u27515 \'cb\'c0\u36827 \'bd\'f8\u31243 \'b3\'cc\uc1
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\b\fs20 \uc2\u26377 \'d3\'d0\u20160 \'ca\'b2\u20040 \'c3\'b4\u23475 \'ba\'a6\u22788 \'b4\'a6\u65306 \'a3\'ba\uc1
\par \plain \f1\fs20 \uc2\u20725 \'bd\'a9\u23608 \'ca\'ac\u36827 \'bd\'f8\u31243 \'b3\'cc\u20250 \'bb\'e1\u21344 \'d5\'bc\u29992 \'d3\'c3\u31995 \'cf\'b5\u32479 \'cd\'b3\u36164 \'d7\'ca\u28304 \'d4\'b4\u65292 \'a3\'ac\u22914 \'c8\'e7\u26524 \'b9\'fb\u24456 \'ba\'dc\u22810 \'b6\'e0\u65292 \'a3\'ac\u21017 \'d4\'f2\u20250 \'bb\'e1\u20005 \'d1\'cf\u37325 \'d6\'d8\u24433 \'d3\'b0\u21709 \'cf\'ec\u26381 \'b7\'fe\u21153 \'ce\'f1\u22120 \'c6\'f7\u30340 \'b5\'c4\u24615 \'d0\'d4\u33021 \'c4\'dc\uc1
\par \uc2\u23396 \'b9\'c2\u20799 \'b6\'f9\u36827 \'bd\'f8\u31243 \'b3\'cc\u19981 \'b2\'bb\u20250 \'bb\'e1\u21344 \'d5\'bc\u29992 \'d3\'c3\u31995 \'cf\'b5\u32479 \'cd\'b3\u36164 \'d7\'ca\u28304 \'d4\'b4\u65292 \'a3\'ac\u26368 \'d7\'ee\u32456 \'d6\'d5\u26159 \'ca\'c7\u30001 \'d3\'c9init\u36827 \'bd\'f8\u31243 \'b3\'cc\u25176 \'cd\'d0\u31649 \'b9\'dc\u65292 \'a3\'ac\u30001 \'d3\'c9init\u36827 \'bd\'f8\u31243 \'b3\'cc\u26469 \'c0\'b4\u37322 \'ca\'cd\u25918 \'b7\'c5\u23427 \'cb\'fc\u12290 \'a1\'a3\uc1
\par 
\par \uc2\u22788 \'b4\'a6\u29702 \'c0\'ed\u27969 \'c1\'f7\u31243 \'b3\'cc:\uc1
\par \uc2\u21482 \'d6\'bb\u35201 \'d2\'aa\u32769 \'c0\'cf\u29241 \'b5\'f9\u19981 \'b2\'bb\u31561 \'b5\'c8wait(sys/wait.h)\u20799 \'b6\'f9\u23376 \'d7\'d3,\u20799 \'b6\'f9\u23376 \'d7\'d3\u37117 \'b6\'bc\u23558 \'bd\'ab\u25104 \'b3\'c9\u20026 \'ce\'aa\u23396 \'b9\'c2\u39746 \'bb\'ea\u37326 \'d2\'b0\u39740 \'b9\'edzombie(zombie),unix\u20013 \'d6\'d0\u40664 \'c4\'ac\u35748 \'c8\'cf\u32769 \'c0\'cf\u29241 \'b5\'f9\u24635 \'d7\'dc\u26159 \'ca\'c7\u24819 \'cf\'eb\u30475 \'bf\'b4\u20799 \'b6\'f9\u23376 \'d7\'d3\u27515 \'cb\'c0\u21518 \'ba\'f3\u30340 \'b5\'c4\u29366 \'d7\'b4\u24577 \'cc\'ac(\u20197 \'d2\'d4\u20415 \'b1\'e3\u25253 \'b1\'a8\u20167 \'b3\'f0)\~\~\uc1
\par \~ if\~\~ \uc2\u32769 \'c0\'cf\u29241 \'b5\'f9\u27604 \'b1\'c8\u20799 \'b6\'f9\u23376 \'d7\'d3\u20808 \'cf\'c8\u20877 \'d4\'d9\u35265 \'bc\'fb\~\~\uc1
\par \~ \uc2\u20799 \'b6\'f9\u23376 \'d7\'d3\u23558 \'bd\'ab\u34987 \'b1\'bbinit(id\~\~ =\~\~ 1)\u25910 \'ca\'d5\u20859 \'d1\'f8,\u26368 \'d7\'ee\u21518 \'ba\'f3\u30340 \'b5\'c4\u32467 \'bd\'e1\u26524 \'b9\'fb\u26159 \'ca\'c7zombie\u20799 \'b6\'f9\u23376 \'d7\'d3\u24443 \'b3\'b9\u24213 \'b5\'d7\u20877 \'d4\'d9\u35265 \'bc\'fb,\u31995 \'cf\'b5\u32479 \'cd\'b3\u36164 \'d7\'ca\u28304 \'d4\'b4\u37322 \'ca\'cd\u25918 \'b7\'c5\~\~\uc1
\par \~ else\~\~\~\~
\par \~\~\~\~\~ \{\~\~
\par \~\~\~\~\~\~\~ \uc2\u20799 \'b6\'f9\u23376 \'d7\'d3\u30340 \'b5\'c4zombie\u23558 \'bd\'ab\u19968 \'d2\'bb\u30452 \'d6\'b1\u23384 \'b4\'e6\u22312 \'d4\'da,\u31995 \'cf\'b5\u32479 \'cd\'b3\u36164 \'d7\'ca\u28304 \'d4\'b4\u21344 \'d5\'bc\u29992 \'d3\'c3...\~\~\uc1
\par \~\~\~\~\~\~\~ if\~\~ \uc2\u32769 \'c0\'cf\u29241 \'b5\'f9dead\~\~\~\~\uc1
\par \~\~\~\~\~\~\~\~\~\~\~ \uc2\u20799 \'b6\'f9\u23376 \'d7\'d3\u23558 \'bd\'ab\u34987 \'b1\'bbinit(id\~\~ =\~\~ 1)\u25910 \'ca\'d5\u20859 \'d1\'f8,\u26368 \'d7\'ee\u21518 \'ba\'f3\u30340 \'b5\'c4\u32467 \'bd\'e1\u26524 \'b9\'fb\u26159 \'ca\'c7zombie\u20799 \'b6\'f9\u23376 \'d7\'d3\u24443 \'b3\'b9\u24213 \'b5\'d7\u20877 \'d4\'d9\u35265 \'bc\'fb,\u31995 \'cf\'b5\u32479 \'cd\'b3\u36164 \'d7\'ca\u28304 \'d4\'b4\u37322 \'ca\'cd\u25918 \'b7\'c5\~\~\uc1
\par \~\~\~
\par \~\~\~\~\~ else\~\~ \uc2\u31867 \'c0\'e0\u20284 \'cb\'c6\u30340 \'b5\'c4\u20799 \'b6\'f9\u23376 \'d7\'d3zombie\u36234 \'d4\'bd\u26469 \'c0\'b4\u36234 \'d4\'bd\u22810 \'b6\'e0,\u31995 \'cf\'b5\u32479 \'cd\'b3\u23601 \'be\'cd\u31561 \'b5\'c8\u27515 \'cb\'c0\u20102 \'c1\'cb!!!\~\~\uc1
\par \~\~\~ \}\~
\par \~
\par \plain \f1\fs20\cf1 signal(SIGCHLD, SIG_IGN);
\par \plain \f1\fs20 \uc2\u24573 \'ba\'f6\u30053 \'c2\'d4SIGCHLD\u20449 \'d0\'c5\u21495 \'ba\'c5\u65292 \'a3\'ac\u36825 \'d5\'e2\u24120 \'b3\'a3\u29992 \'d3\'c3\u20110 \'d3\'da\u24182 \'b2\'a2\u21457 \'b7\'a2\u26381 \'b7\'fe\u21153 \'ce\'f1\u22120 \'c6\'f7\u30340 \'b5\'c4\u24615 \'d0\'d4\u33021 \'c4\'dc\u30340 \'b5\'c4\u19968 \'d2\'bb\u20010 \'b8\'f6\u25216 \'bc\'bc\u24039 \'c7\'c9\u22240 \'d2\'f2\u20026 \'ce\'aa\u24182 \'b2\'a2\u21457 \'b7\'a2\u26381 \'b7\'fe\u21153 \'ce\'f1\u22120 \'c6\'f7\u24120 \'b3\'a3\u24120 \'b3\'a3fork\u24456 \'ba\'dc\u22810 \'b6\'e0\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u65292 \'a3\'ac\uc1
\par \uc2\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u32456 \'d6\'d5\u32467 \'bd\'e1\u20043 \'d6\'ae\u21518 \'ba\'f3\u38656 \'d0\'e8\u35201 \'d2\'aa\u26381 \'b7\'fe\u21153 \'ce\'f1\u22120 \'c6\'f7\u36827 \'bd\'f8\u31243 \'b3\'cc\u21435 \'c8\'a5wait\u28165 \'c7\'e5\u29702 \'c0\'ed\u36164 \'d7\'ca\u28304 \'d4\'b4\u12290 \'a1\'a3\uc1
\par \uc2\u22914 \'c8\'e7\u26524 \'b9\'fb\u23558 \'bd\'ab\u27492 \'b4\'cb\u20449 \'d0\'c5\u21495 \'ba\'c5\u30340 \'b5\'c4\u22788 \'b4\'a6\u29702 \'c0\'ed\u26041 \'b7\'bd\u24335 \'ca\'bd\u35774 \'c9\'e8\u20026 \'ce\'aa\u24573 \'ba\'f6\u30053 \'c2\'d4\u65292 \'a3\'ac\u21487 \'bf\'c9\u35753 \'c8\'c3\u20869 \'c4\'da\u26680 \'ba\'cb\u25226 \'b0\'d1\u20725 \'bd\'a9\u23608 \'ca\'ac\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u36716 \'d7\'aa\u20132 \'bd\'bb\u32473 \'b8\'f8init\u36827 \'bd\'f8\u31243 \'b3\'cc\u21435 \'c8\'a5\u22788 \'b4\'a6\u29702 \'c0\'ed\u65292 \'a3\'ac\u30465 \'ca\'a1\u21435 \'c8\'a5\u20102 \'c1\'cb\u22823 \'b4\'f3\u37327 \'c1\'bf\u20725 \'bd\'a9\u23608 \'ca\'ac\u36827 \'bd\'f8\u31243 \'b3\'cc\u21344 \'d5\'bc\u29992 \'d3\'c3\u31995 \'cf\'b5\u32479 \'cd\'b3\u36164 \'d7\'ca\u28304 \'d4\'b4\u12290 \'a1\'a3(Linux Only)\uc1
\par \plain \f1\b\fs20 
\par \uc2\u22914 \'c8\'e7\u20309 \'ba\'ce\u38450 \'b7\'c0\u27490 \'d6\'b9\u20725 \'bd\'a9\u23608 \'ca\'ac\u36827 \'bd\'f8\u31243 \'b3\'cc\uc1
\par \plain \f1\fs20 \uc2\u39318 \'ca\'d7\u20808 \'cf\'c8\u26126 \'c3\'f7\u30333 \'b0\'d7\u22914 \'c8\'e7\u20309 \'ba\'ce\u20135 \'b2\'fa\u29983 \'c9\'fa\u20725 \'bd\'a9\u23608 \'ca\'ac\u36827 \'bd\'f8\u31243 \'b3\'cc\u65306 \'a3\'ba\uc1
\par 1.\uc2\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u32467 \'bd\'e1\u26463 \'ca\'f8\u21518 \'ba\'f3\u21521 \'cf\'f2\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u21457 \'b7\'a2\u20986 \'b3\'f6SIGCHLD\u20449 \'d0\'c5\u21495 \'ba\'c5\u65292 \'a3\'ac\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u40664 \'c4\'ac\u35748 \'c8\'cf\u24573 \'ba\'f6\u30053 \'c2\'d4\u20102 \'c1\'cb\u23427 \'cb\'fc\uc1
\par 2.\uc2\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u27809 \'c3\'bb\u26377 \'d3\'d0\u35843 \'b5\'f7\u29992 \'d3\'c3wait()\u25110 \'bb\'f2waitpid()\u20989 \'ba\'af\u25968 \'ca\'fd\u26469 \'c0\'b4\u31561 \'b5\'c8\u24453 \'b4\'fd\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u30340 \'b5\'c4\u32467 \'bd\'e1\u26463 \'ca\'f8\uc1
\par 
\par \plain \f1\fs20\cf1 \uc2\u31532 \'b5\'da\u19968 \'d2\'bb\u31181 \'d6\'d6\u26041 \'b7\'bd\u27861 \'b7\'a8:\~ \u25429 \'b2\'b6\u25417 \'d7\'bdSIGCHLD\u20449 \'d0\'c5\u21495 \'ba\'c5,\u24182 \'b2\'a2\u22312 \'d4\'da\u20449 \'d0\'c5\u21495 \'ba\'c5\u22788 \'b4\'a6\u29702 \'c0\'ed\u20989 \'ba\'af\u25968 \'ca\'fd\u37324 \'c0\'ef\u38754 \'c3\'e6\u35843 \'b5\'f7\u29992 \'d3\'c3wait\u20989 \'ba\'af\u25968 \'ca\'fd\uc1
\par \plain \f1\fs20 \uc2\u36716 \'d7\'aa\u36148 \'cc\'f9Richard Steven\u30340 \'b5\'c4Unix Network Programming\u20195 \'b4\'fa\u30721 \'c2\'eb\uc1
\par int
\par main(int argc, char **argv)
\par \{
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ ...
\par \~\~\~\~\~\~\~ Signal(SIGCHLD, sig_chld);
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ for(;
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ \}
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ ...
\par \}
\par void
\par sig_chld(int signo)
\par \{
\par \~\~\~\~\~\~\~ pid_t\~\~\~\~\~\~\~ pid;
\par \~\~\~\~\~\~\~ int\~\~\~\~\~\~\~ stat;
\par \~\~\~\~\~\~\~ while ( (pid = waitpid(-1, &stat, WNOHANG)) >; 0)
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ printf("child %d terminated/n", pid);
\par \~\~\~\~\~\~\~ return;
\par \}
\par \~
\par \plain \f1\fs20\cf1 \uc2\u31532 \'b5\'da\u20108 \'b6\'fe\u31181 \'d6\'d6\u26041 \'b7\'bd\u27861 \'b7\'a8\u65306 \'a3\'ba\uc1\plain \f1\b\fs20\cf1 \uc2\u20004 \'c1\'bd\u27425 \'b4\'cefork()\u65306 \'a3\'ba\uc1\plain \f1\fs20\cf1 \uc2\u36716 \'d7\'aa\u36733 \'d4\'d8\uc1
\par \plain \f1\fs20 \uc2\u22312 \'d4\'da\u12298 \'a1\'b6Unix \u29615 \'bb\'b7\u22659 \'be\'b3\u39640 \'b8\'df\u32423 \'bc\'b6\u32534 \'b1\'e0\u31243 \'b3\'cc\u12299 \'a1\'b7\u37324 \'c0\'ef\u20851 \'b9\'d8\u20110 \'d3\'da\u36825 \'d5\'e2\u20010 \'b8\'f6\u22312 \'d4\'da8.6\u33410 \'bd\'da\u26377 \'d3\'d0\u38750 \'b7\'c7\u24120 \'b3\'a3\u28165 \'c7\'e5\u26970 \'b3\'fe\u30340 \'b5\'c4\u35828 \'cb\'b5\u26126 \'c3\'f7\u12290 \'a1\'a3\uc1
\par \uc2\u22238 \'bb\'d8\u24518 \'d2\'e4\u19968 \'d2\'bb\u19979 \'cf\'c28 . 5\u33410 \'bd\'da\u20013 \'d6\'d0\u26377 \'d3\'d0\u20851 \'b9\'d8\u20725 \'bd\'a9\u27515 \'cb\'c0\u36827 \'bd\'f8\u31243 \'b3\'cc\u30340 \'b5\'c4\u35752 \'cc\'d6\u35770 \'c2\'db\u12290 \'a1\'a3\uc1
\par \uc2\u22914 \'c8\'e7\u26524 \'b9\'fb\u19968 \'d2\'bb\u20010 \'b8\'f6\u36827 \'bd\'f8\u31243 \'b3\'cc\u35201 \'d2\'aaf o r k\u19968 \'d2\'bb\u20010 \'b8\'f6\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u65292 \'a3\'ac\u20294 \'b5\'ab\u19981 \'b2\'bb\u35201 \'d2\'aa\u27714 \'c7\'f3\u23427 \'cb\'fc\u31561 \'b5\'c8\u24453 \'b4\'fd\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u32456 \'d6\'d5\u27490 \'d6\'b9\u65292 \'a3\'ac\u20063 \'d2\'b2\u19981 \'b2\'bb\u24076 \'cf\'a3\u26395 \'cd\'fb\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u22788 \'b4\'a6\u20110 \'d3\'da\u20725 \'bd\'a9\u27515 \'cb\'c0\u29366 \'d7\'b4\u24577 \'cc\'ac\u30452 \'d6\'b1\u21040 \'b5\'bd\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u32456 \'d6\'d5\u27490 \'d6\'b9\u65292 \'a3\'ac\uc1
\par \uc2\u23454 \'ca\'b5\u29616 \'cf\'d6\u36825 \'d5\'e2\u19968 \'d2\'bb\u35201 \'d2\'aa\u27714 \'c7\'f3\u30340 \'b5\'c4\u35776 \'be\'f7\u31373 \'c7\'cf\u26159 \'ca\'c7\u35843 \'b5\'f7\u29992 \'d3\'c3f o r k\u20004 \'c1\'bd\u27425 \'b4\'ce\u12290 \'a1\'a3\u31243 \'b3\'cc\u24207 \'d0\'f28 - 5\u23454 \'ca\'b5\u29616 \'cf\'d6\u20102 \'c1\'cb\u36825 \'d5\'e2\u19968 \'d2\'bb\u28857 \'b5\'e3\u12290 \'a1\'a3\uc1
\par 
\par \uc2\u22312 \'d4\'da\u31532 \'b5\'da\u20108 \'b6\'fe\u20010 \'b8\'f6\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u20013 \'d6\'d0\u35843 \'b5\'f7\u29992 \'d3\'c3s l e e p\u20197 \'d2\'d4\u20445 \'b1\'a3\u35777 \'d6\'a4\u22312 \'d4\'da\u25171 \'b4\'f2\u21360 \'d3\'a1\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'ccI D\u26102 \'ca\'b1\u31532 \'b5\'da\u19968 \'d2\'bb\u20010 \'b8\'f6\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u24050 \'d2\'d1\u32456 \'d6\'d5\u27490 \'d6\'b9\u12290 \'a1\'a3\uc1
\par \uc2\u22312 \'d4\'daf o r k\u20043 \'d6\'ae\u21518 \'ba\'f3\u65292 \'a3\'ac\u29238 \'b8\'b8\u12289 \'a1\'a2\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u37117 \'b6\'bc\u21487 \'bf\'c9\u32487 \'bc\'cc\u32493 \'d0\'f8\u25191 \'d6\'b4\u34892 \'d0\'d0\emdash \emdash \u25105 \'ce\'d2\u20204 \'c3\'c7\u26080 \'ce\'de\u27861 \'b7\'a8\u39044 \'d4\'a4\u30693 \'d6\'aa\u21738 \'c4\'c4\u19968 \'d2\'bb\u20010 \'b8\'f6\u20250 \'bb\'e1\u20808 \'cf\'c8\u25191 \'d6\'b4\u34892 \'d0\'d0\u12290 \'a1\'a3\uc1
\par \uc2\u22914 \'c8\'e7\u26524 \'b9\'fb\u19981 \'b2\'bb\u20351 \'ca\'b9\u31532 \'b5\'da\u20108 \'b6\'fe\u20010 \'b8\'f6\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u30561 \'cb\'af\u30496 \'c3\'df\u65292 \'a3\'ac\u21017 \'d4\'f2\u22312 \'d4\'daf o r k\u20043 \'d6\'ae\u21518 \'ba\'f3\u65292 \'a3\'ac\u23427 \'cb\'fc\u21487 \'bf\'c9\u33021 \'c4\'dc\u27604 \'b1\'c8\u20854 \'c6\'e4\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u20808 \'cf\'c8\u25191 \'d6\'b4\u34892 \'d0\'d0\u65292 \'a3\'ac\uc1
\par \uc2\u20110 \'d3\'da\u26159 \'ca\'c7\u23427 \'cb\'fc\u25171 \'b4\'f2\u21360 \'d3\'a1\u30340 \'b5\'c4\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'ccI D\u23558 \'bd\'ab\u26159 \'ca\'c7\u21019 \'b4\'b4\u24314 \'bd\'a8\u23427 \'cb\'fc\u30340 \'b5\'c4\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u65292 \'a3\'ac\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7i n i t\u36827 \'bd\'f8\u31243 \'b3\'cc\u65288 \'a3\'a8\u36827 \'bd\'f8\u31243 \'b3\'ccID 1\u65289 \'a3\'a9\u12290 \'a1\'a3\uc1
\par 
\par #include\~\~\~\~\~\~\~ <sys/types.h>
\par #include\~\~\~\~\~\~\~ <sys/wait.h>
\par #include\~\~\~\~\~\~\~ "ourhdr.h"
\par int main(void)
\par \{
\par \~\~\~\~\~\~\~ pid_t\~\~\~\~\~\~\~ pid;
\par \~\~\~\~\~\~\~ if ( (pid = fork()) < 0)
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ err_sys("fork error");
\par \plain \f1\fs20\cf1 \~\~\~\~\~\~\~ else if (pid == 0) \{\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ /* first child */
\par \plain \f1\fs20 \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ if ( (pid = fork()) < 0)
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ err_sys("fork error");
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ else if (pid > 0)
\par \plain \f1\fs20\cf1 \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ exit(0);\~\~\~\~\~\~\~ /* parent from second fork == first child */
\par \plain \f1\fs20 \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ /* We're the second child; our parent becomes init as soon as our real parent calls exit() in the statement above.
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ Here's where we'd continue executing, knowing that when we're done, init will reap our status. */
\par \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ sleep(2);
\par \plain \f1\fs20\cf1 \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ printf("second child, parent pid = %d/n", getppid());
\par \plain \f1\fs20 \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ exit(0);
\par \~\~\~\~\~\~\~ \}
\par \plain \f1\fs20\cf1 \~\~\~\~\~\~\~ if (waitpid(pid, NULL, 0) != pid)\~\~\~\~\~\~\~ /* wait for first child */
\par \plain \f1\fs20 \~\~\~\~\~\~\~\~\~\~\~\~\~\~\~ err_sys("waitpid error");
\par \~\~\~\~\~\~\~ /* We're the parent (the original process); we continue executing,
\par \~\~\~\~\~\~\~\~\~\~ knowing that we're not the parent of the second child. */
\par \~\~\~\~\~\~\~ exit(0);
\par \}
\par 
\par \uc2\u36825 \'d5\'e2\u20010 \'b8\'f6\u31243 \'b3\'cc\u24207 \'d0\'f2\u30340 \'b5\'c4\u23454 \'ca\'b5\u38469 \'bc\'ca\u26159 \'ca\'c7\u65292 \'a3\'ac\u31532 \'b5\'da\u19968 \'d2\'bb\u27425 \'b4\'cefork\u21019 \'b4\'b4\u24314 \'bd\'a8\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'ccA\u65292 \'a3\'ac\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'ccA\u35843 \'b5\'f7\u29992 \'d3\'c3\u31532 \'b5\'da\u20108 \'b6\'fe\u27425 \'b4\'cefork\u21019 \'b4\'b4\u24314 \'bd\'a8\u23385 \'cb\'ef\u36827 \'bd\'f8\u31243 \'b3\'ccB\u12290 \'a1\'a3\uc1
\par \uc2\u28982 \'c8\'bb\u21518 \'ba\'f3\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'ccA\u36864 \'cd\'cb\u20986 \'b3\'f6\u65292 \'a3\'ac\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u20351 \'ca\'b9\u29992 \'d3\'c3waitpid\u25910 \'ca\'d5\u38598 \'bc\'af\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'ccA\u30340 \'b5\'c4\u20449 \'d0\'c5\u24687 \'cf\'a2\u12290 \'a1\'a3\u37027 \'c4\'c7\u20040 \'c3\'b4B\u30340 \'b5\'c4\u29238 \'b8\'b8\u36827 \'bd\'f8\u31243 \'b3\'cc\u23601 \'be\'cd\u21464 \'b1\'e4\u25104 \'b3\'c9\u20102 \'c1\'cbinit\u30340 \'b5\'c4\u36827 \'bd\'f8\u31243 \'b3\'cc\u12290 \'a1\'a3\uc1
\par 
\par init\uc2\u36827 \'bd\'f8\u31243 \'b3\'cc\u20250 \'bb\'e1\u22312 \'d4\'da\u26377 \'d3\'d0\u23376 \'d7\'d3\u36827 \'bd\'f8\u31243 \'b3\'cc\u36864 \'cd\'cb\u20986 \'b3\'f6\u26102 \'ca\'b1\u35843 \'b5\'f7\u29992 \'d3\'c3wait\u20989 \'ba\'af\u25968 \'ca\'fd\u12290 \'a1\'a3\uc1
\par \~\par}