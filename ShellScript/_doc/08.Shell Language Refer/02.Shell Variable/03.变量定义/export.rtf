{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil\fcharset2 Symbol;}}{\colortbl;\red0\green0\blue255;\red0\green128\blue128;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid129084728\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f3\fs24\lang1024}
\listid1972487708}
}
{\*\listoverridetable
{\listoverride\listid1972487708\listoverridecount0\ls1}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf3 export
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 PROLOG
\par        This  manual  page is part of the POSIX Programmer's Manual.  The Linux implementation of this interface may differ (con-
\par        sult the corresponding Linux manual page for details of Linux behavior), or the  interface  may  not  be  implemented  on
\par        Linux.
\par 
\par NAME
\par  \plain \f1\fs20\cf1       export - set the export attribute for variables
\par \plain \f1\fs20 
\par SYNOPSIS
\par        export name[=word]...
\par 
\par \plain \f1\fs20\cf1        export -p
\par \plain \f1\fs20 
\par 
\par DESCRIPTION
\par        The  shell  shall give the export attribute to the variables corresponding to the specified names, \plain \f1\fs20\cf1 which shall cause them
\par        to be in the environment of subsequently executed commands.\plain \f1\fs20  If the name of a variable is followed by  =  word,  then  the
\par        value of that variable shall be set to word.
\par 
\par        The export special built-in shall support the Base Definitions volume of IEEE Std 1003.1-2001, Section 12.2, Utility Syn-
\par        tax Guidelines.
\par \plain \f1\fs20\cf1 
\par        When -p is specified, export shall write to the standard output the names and values of all exported  variables,  in  the
\par        following format:
\par \plain \f1\fs20               "export %s=%s\\n", <name>, <value>
\par 
\par        if name is set, and:
\par               "export %s\\n", <name>
\par 
\par        if name is unset.
\par 
\par        The  shell  shall format the output, including the proper use of quoting, so that it is suitable for reinput to the shell
\par        as commands that achieve the same exporting results, except:
\par         1. Read-only variables with values cannot be reset.
\par         2. Variables that were unset at the time they were output need not be reset to the unset state if a value is assigned to
\par            the variable between the time the state was saved and the time at which the saved output is reinput to the shell.
\par 
\par        When no arguments are given, the results are unspecified.
\par 
\par OPTIONS
\par        See the DESCRIPTION.
\par 
\par OPERANDS
\par        See the DESCRIPTION.
\par 
\par STDIN
\par        Not used.
\par 
\par INPUT FILES
\par        None.
\par 
\par ENVIRONMENT VARIABLES
\par        None.
\par 
\par ASYNCHRONOUS EVENTS
\par        Default.
\par 
\par STDOUT
\par        See the DESCRIPTION.
\par 
\par STDERR
\par        The standard error shall be used only for diagnostic messages.
\par 
\par OUTPUT FILES
\par        None.
\par 
\par EXTENDED DESCRIPTION
\par        None.
\par 
\par EXIT STATUS
\par        Zero.
\par 
\par CONSEQUENCES OF ERRORS
\par        Default.
\par 
\par        The following sections are informative.
\par 
\par APPLICATION USAGE
\par        None.
\par 
\par EXAMPLES
\par        Export PWD and HOME variables:
\par 
\par 
\par               export PWD HOME
\par 
\par        Set and export the PATH variable:
\par 
\par 
\par               export PATH=/local/bin:$PATH
\par 
\par        Save and restore all exported variables:
\par 
\par 
\par               export -p > temp-fileunset a lot of variables... processing. temp-file
\par 
\par RATIONALE
\par        Some  historical shells use the no-argument case as the functional equivalent of what is required here with -p. This fea-
\par        ture was left unspecified because it is not historical practice in all shells, and some scripts  may  rely  on  the  now-
\par        unspecified  results on their implementations. Attempts to specify the -p output as the default case were unsuccessful in
\par        achieving consensus. The -p option was added to allow portable access to the values that can  be  saved  and  then  later
\par        restored using; for example, a dot script.\par}