{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}{\f4\fnil\fcharset2 Symbol;}{\f5\fnil\fcharset0 Courier New;}}{\colortbl;\red0\green0\blue255;\red0\green128\blue128;\red255\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1810211300\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid975060345}
{\list\listtemplateid1914034527\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1233305311}
{\list\listtemplateid1425898594
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid1479440878}
}
{\*\listoverridetable
{\listoverride\listid975060345\listoverridecount0\ls1}
{\listoverride\listid1233305311\listoverridecount0\ls2}
{\listoverride\listid1479440878\listoverridecount0\ls3}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf4 06.Shell Process Substitution
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\b\fs20 Bash Process Substitution
\par \plain \f1\fs20 In addition to the fairly common forms of\~input/output redirection\~the shell recognizes something called\~process substitution. Although not documented as a form of input/output redirection, its syntax and its effects are similar.
\par The syntax for process substitution is:
\par <(list)
\par or
\par >(list)
\par where each\~\plain \f1\i\fs20 list\plain \f1\fs20 \~is a command or a pipeline of commands. The effect of process substitution is to make each list act like a file. This is done by giving the list a\~\plain \f1\i\fs20 name\plain \f1\fs20 \~in the file system and then substituting that name in the command line. The list is given a name either by connecting the list to named pipe or by using a file in\~/dev/fd\~(if supported by the O/S). By doing this, the command simply sees a file name and is unaware that its reading from or writing to a command pipeline.
\par To substitute a command pipeline for an input file the syntax is:
\par command ... <(list) ...
\par To substitute a command pipeline for an output file the syntax is:  command ... >(list) ...
\par At first process substitution may seem rather pointless, for example you might imagine something simple like:
\par uniq <(sort a)
\par to sort a file and then find the unique lines in it, but this is more commonly (and more conveniently) written as:  sort a | uniq
\par The power of process substitution comes when you have multiple command pipelines that you want to connect to a single command.
\par For example, given the two files:
\par # cat a
\par e
\par d
\par c
\par b
\par a
\par # cat b
\par g
\par f
\par e
\par d
\par c
\par b
\par To view the lines unique to each of these two unsorted files you might do something like this:  # sort a | uniq >tmp1
\par # sort b | uniq >tmp2
\par # comm -3 tmp1 tmp2
\par a
\par f
\par g
\par # rm tmp1 tmp2
\par With process substitution we can do all this with one line:  # comm -3 <(sort a | uniq) <(sort b | uniq)
\par a
\par f
\par g
\par Depending on your shell settings you may get an error message similar to:
\par syntax error near unexpected token `('
\par when you try to use process substitution, particularly if you try to use it within a shell script. Process substitution is not a POSIX compliant feature and so it may have to be enabled via:  set +o posix
\par Be careful not to try something like:  if [[ $use_process_substitution -eq 1 ]]; then
\par set +o posix
\par comm -3 <(sort a | uniq) <(sort b | uniq)
\par fi
\par The command\~set +o posix\~enables not only the execution of process substitution but the recognition of the syntax. So, in the example above the shell tries to parse the process substitution syntax before the "set" command is executed and therefore still sees the process substitution syntax as illegal.
\par Of course, note that all shells may not support process substitution, these examples will work with bash.
\par __________________________\~
\par Mitch Frazier is the System Administrator at\~\plain \f1\i\fs20 Linux Journal\plain \f1\fs20 .
\par \plain \f1\fs20\cf2 ---------------------------------------------------------------------------------------------------------------------------
\par \plain \f1\fs20 \uc2\u22312 \'d4\'da\u25903 \'d6\'a7\u25345 \'b3\'d6\u21629 \'c3\'fc\u21517 \'c3\'fb\u31649 \'b9\'dc\u36947 \'b5\'c0(FIFOs)\u25110 \'bb\'f2\u32773 \'d5\'df'/dev/fd'\u30340 \'b5\'c4\u31995 \'cf\'b5\u32479 \'cd\'b3\u19978 \'c9\'cf\u21487 \'bf\'c9\u20197 \'d2\'d4\u23454 \'ca\'b5\u29616 \'cf\'d6Process Substitution,\u22522 \'bb\'f9\u26412 \'b1\'be\u26684 \'b8\'f1\u24335 \'ca\'bd\u22914 \'c8\'e7\u19979 \'cf\'c2\uc1
\par \~\~\~ command <(list)
\par \~\~\~ or\~\~
\par \~\~\~ command >(list)
\par \plain \f1\fs20\cf1 \uc2\u24320 \'bf\'aa\u22987 \'ca\'bclist\u30340 \'b5\'c4\u36816 \'d4\'cb\u34892 \'d0\'d0\u30340 \'b5\'c4\u26102 \'ca\'b1\u20505 \'ba\'f2\u20250 \'bb\'e1\u25226 \'b0\'d1list\u30340 \'b5\'c4\u36755 \'ca\'e4\u20837 \'c8\'eb\u36755 \'ca\'e4\u20986 \'b3\'f6\u36830 \'c1\'ac\u25509 \'bd\'d3\u21040 \'b5\'bd\u19968 \'d2\'bb\u20010 \'b8\'f6FIFO\u25110 \'bb\'f2\u32773 \'d5\'df\u26576 \'c4\'b3\u20010 \'b8\'f6`/dev/fd'\u19979 \'cf\'c2\u30340 \'b5\'c4\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf3 \uc2\u32780 \'b6\'f8\u25972 \'d5\'fb\u20010 \'b8\'f6\u25193 \'c0\'a9\u23637 \'d5\'b9\u30340 \'b5\'c4\u32467 \'bd\'e1\u26524 \'b9\'fb\u23601 \'be\'cd\u26159 \'ca\'c7\u25226 \'b0\'d1\u36825 \'d5\'e2\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\u20316 \'d7\'f7\u20026 \'ce\'aa\u21442 \'b2\'ce\u25968 \'ca\'fd\u20256 \'b4\'ab\u36882 \'b5\'dd\u32473 \'b8\'f8\u21629 \'c3\'fc\u20196 \'c1\'eecommand\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 
\par \uc2\u22914 \'c8\'e7\u26524 \'b9\'fb\u20351 \'ca\'b9\u29992 \'d3\'c3>(list)\u30340 \'b5\'c4\u35805 \'bb\'b0\u65292 \'a3\'accommand\u20889 \'d0\'b4\u20837 \'c8\'eb\u36825 \'d5\'e2\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u20869 \'c4\'da\u23481 \'c8\'dd\u65292 \'a3\'ac\u23601 \'be\'cd\u20250 \'bb\'e1\u20316 \'d7\'f7\u20026 \'ce\'aalist\u30340 \'b5\'c4\u36755 \'ca\'e4\u20837 \'c8\'eb\u12290 \'a1\'a3\uc1
\par \uc2\u32780 \'b6\'f8\u22914 \'c8\'e7\u26524 \'b9\'fb\u20351 \'ca\'b9\u29992 \'d3\'c3<(list)\u30340 \'b5\'c4\u35805 \'bb\'b0\u65292 \'a3\'ac \u37027 \'c4\'c7\u20040 \'c3\'b4list\u30340 \'b5\'c4\u36755 \'ca\'e4\u20986 \'b3\'f6\u23601 \'be\'cd\u21487 \'bf\'c9\u20197 \'d2\'d4\u20351 \'ca\'b9command\u20174 \'b4\'d3\u36825 \'d5\'e2\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u20013 \'d6\'d0\u35835 \'b6\'c1\u21040 \'b5\'bd\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf3 \uc2\u27880 \'d7\'a2\u24847 \'d2\'e2<\u65292 \'a3\'ac>\u19982 \'d3\'eb\u24038 \'d7\'f3\u25324 \'c0\'a8\u21495 \'ba\'c5\u20043 \'d6\'ae\u38388 \'bc\'e4\u26159 \'ca\'c7\u27809 \'c3\'bb\u26377 \'d3\'d0\u31354 \'bf\'d5\u26684 \'b8\'f1\u30340 \'b5\'c4\u65292 \'a3\'ac\u21542 \'b7\'f1\u21017 \'d4\'f2\u30340 \'b5\'c4\u35805 \'bb\'b0\u20250 \'bb\'e1\u34987 \'b1\'bb\u35299 \'bd\'e2\u37322 \'ca\'cd\u25104 \'b3\'c9\u20026 \'ce\'aa\u37325 \'d6\'d8\u23450 \'b6\'a8\u21521 \'cf\'f2\u25805 \'b2\'d9\u20316 \'d7\'f7\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 \uc2\u22312 \'d4\'da\u20801 \'d4\'ca\u35768 \'d0\'ed\u30340 \'b5\'c4\u24773 \'c7\'e9\u20917 \'bf\'f6\u19979 \'cf\'c2 process substitution\u21644 \'ba\'cdparameter expansion\u65292 \'a3\'ac variable expasion, command expansion \u21644 \'ba\'cdarithmatic expasion\u19968 \'d2\'bb\u36215 \'c6\'f0\u34987 \'b1\'bb\u25191 \'d6\'b4\u34892 \'d0\'d0.\uc1
\par 
\par \uc2\u22909 \'ba\'c3\u22788 \'b4\'a6\u65292 \'a3\'ac\u33021 \'c4\'dc\u35299 \'bd\'e2\u20915 \'be\'f6\u19968 \'d2\'bb\u20123 \'d0\'a9\u37325 \'d6\'d8\u23450 \'b6\'a8\u21521 \'cf\'f2\u19981 \'b2\'bb\u33021 \'c4\'dc\u35299 \'bd\'e2\u20915 \'be\'f6\u30340 \'b5\'c4\u38382 \'ce\'ca\u39064 \'cc\'e2\u65292 \'a3\'ac\u22914 \'c8\'e7\u35753 \'c8\'c3\u19968 \'d2\'bb\u20010 \'b8\'f6\u21629 \'c3\'fc\u20196 \'c1\'ee\u26377 \'d3\'d0\u22810 \'b6\'e0\u20010 \'b8\'f6\u36755 \'ca\'e4\u20837 \'c8\'eb\u30340 \'b5\'c4\u24773 \'c7\'e9\u20917 \'bf\'f6\u65306 \'a3\'ba\uc1
\par \uc2\u26377 \'d3\'d0\u19968 \'d2\'bb\u20010 \'b8\'f6\u20363 \'c0\'fd\u23376 \'d7\'d3\u65292 \'a3\'ac\u35201 \'d2\'aa\u27714 \'c7\'f3\u23558 \'bd\'ab2\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u65292 \'a3\'aca\u21644 \'ba\'cdb\u30340 \'b5\'c4\u20869 \'c4\'da\u23481 \'c8\'dd\u36827 \'bd\'f8\u34892 \'d0\'d0\u26597 \'b2\'e9\u25214 \'d5\'d2\u65292 \'a3\'ac\u25214 \'d5\'d2\u21040 \'b5\'bd\u21807 \'ce\'a8\u19968 \'d2\'bb\u30340 \'b5\'c4\u34892 \'d0\'d0\u65292 \'a3\'ac\u28982 \'c8\'bb\u21518 \'ba\'f3\u36755 \'ca\'e4\u20986 \'b3\'f6\u12290 \'a1\'a3\uc1
\par \uc2\u19979 \'cf\'c2\u38754 \'c3\'e6\u26159 \'ca\'c7\u37319 \'b2\'c9\u29992 \'d3\'c3redirection\u30340 \'b5\'c4\u26041 \'b7\'bd\u27861 \'b7\'a8\u65306 \'a3\'ba\uc1
\par # sort a | uniq >tmp1
\par # sort b | uniq >tmp2
\par # comm -3 tmp1 tmp2
\par a
\par f
\par g
\par # rm tmp1 tmp2
\par \uc2\u22914 \'c8\'e7\u26524 \'b9\'fb\u20351 \'ca\'b9\u29992 \'d3\'c3process substitution\u65292 \'a3\'ac\u21487 \'bf\'c9\u20197 \'d2\'d4\u36825 \'d5\'e2\u26679 \'d1\'f9\u20570 \'d7\'f6\u65306 \'a3\'ba\uc1
\par # comm -3 <(sort a | uniq) <(sort b | uniq)
\par a
\par f
\par g
\par \~\uc2\u36825 \'d5\'e2\u26679 \'d1\'f9\u26126 \'c3\'f7\u26174 \'cf\'d4\u25928 \'d0\'a7\u29575 \'c2\'ca\u25552 \'cc\'e1\u39640 \'b8\'df\u20102 \'c1\'cb\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf2 ---------------------------------------------------------------------------------------------------------------------------
\par \plain \f1\fs20\cf1 cmd|\uc2\u8594 \'a1\'fatee--\u8594 \'a1\'fastdout\u8594 \'a1\'fa|cmd2\uc1
\par             \uc2\u8595 \'a1\'fd            \u8593 \'a1\'fc\uc1
\par              \uc2\u8594 \'a1\'facmd1\u8594 \'a1\'fa\uc1
\par \plain \f1\fs20              
\par \plain \f1\fs20\cf1 echo 123 | tee >(awk '\{ print "Length of " $0 " is " length($0) \}') | tr 3 c
\par \plain \f1\fs20 12c
\par Length of 12c is c
\par 
\par \plain \f1\fs20\cf1 echo 123 | tee >(awk '\{ print "Length of " $0 " is " length($0) \}' >tmpfile) | tr 3 c ;cat tmpfile
\par \plain \f1\fs20 12c
\par Length of 123 is 3
\par 
\par \plain \f1\fs20\cf1 echo "Hello from: "|tee > >(sed 's/$/sed 1/') >(sed 's/$/sed 2/') >(awk '\{printf $0"awk\\n"\}')
\par \plain \f1\fs20\cf2 ---------------------------------------------------------------------------------------------------------------------------
\par \plain \f1\fs20 Q\uc2\u65306 \'a3\'ba\uc1
\par \uc2\u29616 \'cf\'d6\u22312 \'d4\'da\u26377 \'d3\'d0\u19968 \'d2\'bb\u20010 \'b8\'f6\u36827 \'bd\'f8\u31243 \'b3\'cc\u26367 \'cc\'e6\u25442 \'bb\'bb\u30340 \'b5\'c4\u38382 \'ce\'ca\u39064 \'cc\'e2\u21521 \'cf\'f2\u22823 \'b4\'f3\u23478 \'bc\'d2\u35831 \'c7\'eb\u25945 \'bd\'cc\u65306 \'a3\'ba\uc1
\par \uc2\u24403 \'b5\'b1\u30452 \'d6\'b1\u25509 \'bd\'d3\u22312 \'d4\'dabash\u30340 \'b5\'c4\u20132 \'bd\'bb\u20114 \'bb\'a5\u24335 \'ca\'bd\u21629 \'c3\'fc\u20196 \'c1\'ee\u20013 \'d6\'d0\u36755 \'ca\'e4\u20837 \'c8\'eb\u65306 \'a3\'ba\uc1
\par while read name; do echo $name; done< \plain \f1\fs20\cf1 <(echo "
\par dfasdf
\par dsfa
\par afda"|grep -Ev "(dsfa)|(^ *$)")
\par \plain \f1\fs20 \uc2\u36825 \'d5\'e2\u26679 \'d1\'f9\u25191 \'d6\'b4\u34892 \'d0\'d0\u30340 \'b5\'c4\u35805 \'bb\'b0\u26159 \'ca\'c7\u27809 \'c3\'bb\u26377 \'d3\'d0\u38382 \'ce\'ca\u39064 \'cc\'e2\u30340 \'b5\'c4\u65292 \'a3\'ac\u20294 \'b5\'ab\u24403 \'b5\'b1\u25226 \'b0\'d1\u23427 \'cb\'fc\u25918 \'b7\'c5\u20837 \'c8\'eb\u21040 \'b5\'bd\u19968 \'d2\'bb\u20010 \'b8\'f6\u33050 \'bd\'c5\u26412 \'b1\'be\u25991 \'ce\'c4\u20214 \'bc\'fe\u20013 \'d6\'d0\u36827 \'bd\'f8\u34892 \'d0\'d0\u25191 \'d6\'b4\u34892 \'d0\'d0\u30340 \'b5\'c4\u26102 \'ca\'b1\u20505 \'ba\'f2\u65306 \'a3\'ba\uc1
\par \plain \f1\fs20\cf3 #!/bin/bash
\par \plain \f1\fs20 while read name; do echo $name; done< <(echo "
\par dfasdf
\par dsfa
\par afda"|grep -Ev "(dsfa)|(^ *$)") 
\par 
\par \uc2\u21364 \'c8\'b4\u20986 \'b3\'f6\u29616 \'cf\'d6\u20102 \'c1\'cb\u22914 \'c8\'e7\u19979 \'cf\'c2\u30340 \'b5\'c4\u38169 \'b4\'ed\u35823 \'ce\'f3\u65306 \'a3\'ba\uc1
\par \plain \f1\fs20\cf1 test.sh: line 3: syntax error near unexpected token `<'
\par test.sh: line 3: `while read name; do echo $name; done< <(echo "'
\par \plain \f1\fs20 
\par A\uc2\u65306 \'a3\'ba\uc1
\par \uc2\u22312 \'d4\'da\u19968 \'d2\'bb\u33324 \'b0\'e3\u30340 \'b5\'c4linux\u31995 \'cf\'b5\u32479 \'cd\'b3\u24403 \'b5\'b1\u20013 \'d6\'d0\u65292 \'a3\'ac\u20351 \'ca\'b9\u29992 \'d3\'c3\uc1\plain \f1\fs20\cf3 sh\uc2\u35843 \'b5\'f7\u29992 \'d3\'c3\uc1\plain \f1\fs20\cf1 \uc2\u25191 \'d6\'b4\u34892 \'d0\'d0\u33050 \'bd\'c5\u26412 \'b1\'be\u30456 \'cf\'e0\u24403 \'b5\'b1\u20110 \'d3\'da\u25171 \'b4\'f2\u24320 \'bf\'aa\u20102 \'c1\'cbbash\u30340 \'b5\'c4POSIX\u26631 \'b1\'ea\u20934 \'d7\'bc\u27169 \'c4\'a3\u24335 \'ca\'bd\u20063 \'d2\'b2\u23601 \'be\'cd\u26159 \'ca\'c7\u35828 \'cb\'b5 /bin/sh \u30456 \'cf\'e0\u24403 \'b5\'b1\u20110 \'d3\'da /bin/bash --posix\uc1
\par \plain \f1\fs20 \uc2\u25152 \'cb\'f9\u20197 \'d2\'d4\u65292 \'a3\'acsh\u36319 \'b8\'fabash\u30340 \'b5\'c4\u21306 \'c7\'f8\u21035 \'b1\'f0\u65292 \'a3\'ac\u23454 \'ca\'b5\u38469 \'bc\'ca\u19978 \'c9\'cf\u23601 \'be\'cd\u26159 \'ca\'c7bash\u26377 \'d3\'d0\u27809 \'c3\'bb\u26377 \'d3\'d0\u24320 \'bf\'aa\u21551 \'c6\'f4posix\u27169 \'c4\'a3\u24335 \'ca\'bd\u30340 \'b5\'c4\u21306 \'c7\'f8\u21035 \'b1\'f0,\u32780 \'b6\'f8\u36827 \'bd\'f8\u31243 \'b3\'cc\u26367 \'cc\'e6\u25442 \'bb\'bb\u38750 \'b7\'c7POSIX\u20860 \'bc\'e6\u23481 \'c8\'dd\u30340 \'b5\'c4\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u20250 \'bb\'e1\u20986 \'b3\'f6\u29616 \'cf\'d6\u38169 \'b4\'ed\u35823 \'ce\'f3\u12290 \'a1\'a3\uc1
\par \uc2\u22240 \'d2\'f2\u20026 \'ce\'aamain (int argc, char ** argv ) , \uc1\plain \f1\fs20\cf1 argv[0] \uc2\u21487 \'bf\'c9\u20197 \'d2\'d4\u21462 \'c8\'a1\u24471 \'b5\'c3\u23545 \'b6\'d4\u24212 \'d3\'a6\u21487 \'bf\'c9\u25191 \'d6\'b4\u34892 \'d0\'d0\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u21517 \'c3\'fb\u23383 \'d7\'d6, \u22312 \'d4\'dash->bash\u24773 \'c7\'e9\u20917 \'bf\'f6\u19979 \'cf\'c2, argv[0] == 'sh'\uc1\plain \f1\fs20 \uc2\u65292 \'a3\'ac\u25152 \'cb\'f9\u20197 \'d2\'d4\u23601 \'be\'cd\u21487 \'bf\'c9\u20197 \'d2\'d4\u21306 \'c7\'f8\u21035 \'b1\'f0\u23545 \'b6\'d4\u24453 \'b4\'fd\u20102 \'c1\'cb!\uc1
\par 
\par \uc2\u32780 \'b6\'f8\u22914 \'c8\'e7\u26524 \'b9\'fb\u30452 \'d6\'b1\u25509 \'bd\'d3\u20351 \'ca\'b9\u29992 \'d3\'c3./test.sh \u25191 \'d6\'b4\u34892 \'d0\'d0\u65292 \'a3\'ac\u33050 \'bd\'c5\u26412 \'b1\'be\u20351 \'ca\'b9\u29992 \'d3\'c3\u31532 \'b5\'da\u19968 \'d2\'bb\u34892 \'d0\'d0\u25351 \'d6\'b8\u23450 \'b6\'a8\u30340 \'b5\'c4\u35299 \'bd\'e2\u37322 \'ca\'cd\u22120 \'c6\'f7\u26469 \'c0\'b4\u35299 \'bd\'e2\u37322 \'ca\'cd\u25191 \'d6\'b4\u34892 \'d0\'d0\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf2 ---------------------------------------------------------------------------------------------------------------------------\par}