{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil Arial;}{\f4\fnil\fcharset2 Symbol;}{\f5\fnil\fcharset0 Courier New;}}{\colortbl;\red0\green0\blue255;\red0\green128\blue128;\red255\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1758530878\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid1021706301}
{\list\listtemplateid982382902\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
\listid1459222544}
{\list\listtemplateid1599249492\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
\listid65348523}
{\list\listtemplateid926835292
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid903060942}
{\list\listtemplateid284741899
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1440\fi-360\jclisttab\tx1440{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid84017977}
{\list\listtemplateid209975330
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f4\fs24\lang1024}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
{\listlevel\levelnfc23\leveljc0\li1080\fi-360\jclisttab\tx1080{\leveltext\'01o;}{\levelnumbers;}\f5\fs24}
\listid530162348}
}
{\*\listoverridetable
{\listoverride\listid1021706301\listoverridecount0\ls1}
{\listoverride\listid1459222544\listoverridecount0\ls2}
{\listoverride\listid65348523\listoverridecount0\ls3}
{\listoverride\listid903060942\listoverridecount0\ls4}
{\listoverride\listid84017977\listoverridecount0\ls5}
{\listoverride\listid530162348\listoverridecount0\ls6}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf4 01.ls
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\b\fs20 ls \uc2\u21629 \'c3\'fc\u20196 \'c1\'ee\uc1
\par \plain \f1\fs20 \uc2\u26159 \'ca\'c7list\u30340 \'b5\'c4\u32553 \'cb\'f5\u20889 \'d0\'b4\u65292 \'a3\'ac\u32570 \'c8\'b1\u30465 \'ca\'a1\u19979 \'cf\'c2ls\u29992 \'d3\'c3\u26469 \'c0\'b4\u25171 \'b4\'f2\u21360 \'d3\'a1\u20986 \'b3\'f6\u24403 \'b5\'b1\u21069 \'c7\'b0\u30446 \'c4\'bf\u24405 \'c2\'bc\u30340 \'b5\'c4\u28165 \'c7\'e5\u21333 \'b5\'a5\u65292 \'a3\'ac\uc1\plain \f1\fs20\cf1 \uc2\u22914 \'c8\'e7\u26524 \'b9\'fbls\u25351 \'d6\'b8\u23450 \'b6\'a8\u20854 \'c6\'e4\u20182 \'cb\'fb\u30446 \'c4\'bf\u24405 \'c2\'bc\u65292 \'a3\'ac\u37027 \'c4\'c7\u20040 \'c3\'b4\u23601 \'be\'cd\u20250 \'bb\'e1\u26174 \'cf\'d4\u31034 \'ca\'be\u25351 \'d6\'b8\u23450 \'b6\'a8\u30446 \'c4\'bf\u24405 \'c2\'bc\u37324 \'c0\'ef\u30340 \'b5\'c4\u25991 \'ce\'c4\u20214 \'bc\'fe\u21450 \'bc\'b0\u25991 \'ce\'c4\u20214 \'bc\'fe\u22841 \'bc\'d0\u28165 \'c7\'e5\u21333 \'b5\'a5\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -b     \uc2\u25226 \'b0\'d1\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\u20013 \'d6\'d0\u19981 \'b2\'bb\u21487 \'bf\'c9\u36755 \'ca\'e4\u20986 \'b3\'f6\u30340 \'b5\'c4\u23383 \'d7\'d6\u31526 \'b7\'fb\u29992 \'d3\'c3\u21453 \'b7\'b4\u26012 \'d0\'b1\u26464 \'b8\'dc\u21152 \'bc\'d3\u23383 \'d7\'d6\u31526 \'b7\'fb\u32534 \'b1\'e0\u21495 \'ba\'c5(\u23601 \'be\'cd\u35937 \'cf\'f3\u22312 \'d4\'daC\u35821 \'d3\'ef\u35328 \'d1\'d4\u37324 \'c0\'ef\u19968 \'d2\'bb\u26679 \'d1\'f9)\u30340 \'b5\'c4\u24418 \'d0\'ce\u24335 \'ca\'bd\u21015 \'c1\'d0\u20986 \'b3\'f6\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf3 -d     \uc2\u23558 \'bd\'ab\u30446 \'c4\'bf\u24405 \'c2\'bc\u35937 \'cf\'f3\u25991 \'ce\'c4\u20214 \'bc\'fe\u19968 \'d2\'bb\u26679 \'d1\'f9\u26174 \'cf\'d4\u31034 \'ca\'be\u65292 \'a3\'ac\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u26174 \'cf\'d4\u31034 \'ca\'be\u20854 \'c6\'e4\u19979 \'cf\'c2\u30340 \'b5\'c4\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par -i      \uc2\u36755 \'ca\'e4\u20986 \'b3\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4 i \u33410 \'bd\'da\u28857 \'b5\'e3\u30340 \'b5\'c4\u32034 \'cb\'f7\u24341 \'d2\'fd\u20449 \'d0\'c5\u24687 \'cf\'a2\u12290 \'a1\'a3\u36755 \'ca\'e4\u20986 \'b3\'f6\u26159 \'ca\'c7\u35813 \'b8\'c3\u25991 \'ce\'c4\u20214 \'bc\'fe\u23545 \'b6\'d4\u24212 \'d3\'a6\u30340 \'b5\'c4inode\u21495 \'ba\'c5\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -k     \uc2\u20197 \'d2\'d4 k \u23383 \'d7\'d6\u33410 \'bd\'da\u30340 \'b5\'c4\u24418 \'d0\'ce\u24335 \'ca\'bd\u34920 \'b1\'ed\u31034 \'ca\'be\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u22823 \'b4\'f3\u23567 \'d0\'a1\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -l      \uc2\u21015 \'c1\'d0\u20986 \'b3\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u35814 \'cf\'ea\u32454 \'cf\'b8\u20449 \'d0\'c5\u24687 \'cf\'a2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -m     \uc2\u27178 \'ba\'e1\u21521 \'cf\'f2\u36755 \'ca\'e4\u20986 \'b3\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\u65292 \'a3\'ac\u24182 \'b2\'a2\u20197 \'d2\'d4\ldblquote \u65292 \'a3\'ac\rdblquote \u20316 \'d7\'f7\u20998 \'b7\'d6\u26684 \'b8\'f1\u31526 \'b7\'fb\u12290 \'a1\'a3\uc1
\par -n     \uc2\u29992 \'d3\'c3\u25968 \'ca\'fd\u23383 \'d7\'d6\u30340 \'b5\'c4 UID\u65292 \'a3\'acGID \u20195 \'b4\'fa\u26367 \'cc\'e6\u21517 \'c3\'fb\u31216 \'b3\'c6\u12290 \'a1\'a3\uc1
\par -o     \uc2\u26174 \'cf\'d4\u31034 \'ca\'be\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u38500 \'b3\'fd\u32452 \'d7\'e9\u20449 \'d0\'c5\u24687 \'cf\'a2\u22806 \'cd\'e2\u30340 \'b5\'c4\u35814 \'cf\'ea\u32454 \'cf\'b8\u20449 \'d0\'c5\u24687 \'cf\'a2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -p -F  \uc2\u22312 \'d4\'da\u27599 \'c3\'bf\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\u21518 \'ba\'f3\u38468 \'b8\'bd\u19978 \'c9\'cf\u19968 \'d2\'bb\u20010 \'b8\'f6\u23383 \'d7\'d6\u31526 \'b7\'fb\u20197 \'d2\'d4\u35828 \'cb\'b5\u26126 \'c3\'f7\u35813 \'b8\'c3\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u31867 \'c0\'e0\u22411 \'d0\'cd\uc1
\par      \plain \f1\fs20\cf3  \ldblquote *\rdblquote \uc2\u34920 \'b1\'ed\u31034 \'ca\'be\u21487 \'bf\'c9\u25191 \'d6\'b4\u34892 \'d0\'d0\u30340 \'b5\'c4\u26222 \'c6\'d5\u36890 \'cd\'a8\u25991 \'ce\'c4\u20214 \'bc\'fe\u65307 \'a3\'bb\ldblquote /\rdblquote \u34920 \'b1\'ed\u31034 \'ca\'be\u30446 \'c4\'bf\u24405 \'c2\'bc\u65307 \'a3\'bb\ldblquote @\rdblquote \u34920 \'b1\'ed\u31034 \'ca\'be\u31526 \'b7\'fb\u21495 \'ba\'c5\u38142 \'c1\'b4\u25509 \'bd\'d3\u65307 \'a3\'bb\ldblquote |\rdblquote \u34920 \'b1\'ed\u31034 \'ca\'beFIFOs\u65307 \'a3\'bb\ldblquote =\rdblquote \u34920 \'b1\'ed\u31034 \'ca\'be\u22871 \'cc\'d7\u25509 \'bd\'d3\u23383 \'d7\'d6(sockets)\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -q     \uc2\u29992 \'d3\'c3?\u20195 \'b4\'fa\u26367 \'cc\'e6\u19981 \'b2\'bb\u21487 \'bf\'c9\u36755 \'ca\'e4\u20986 \'b3\'f6\u30340 \'b5\'c4\u23383 \'d7\'d6\u31526 \'b7\'fb\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -r     \uc2\u23545 \'b6\'d4\u30446 \'c4\'bf\u24405 \'c2\'bc\u21453 \'b7\'b4\u21521 \'cf\'f2\u25490 \'c5\'c5\u24207 \'d0\'f2\uc1\plain \f1\fs20\cf3 \uc2\u12290 \'a1\'a3\uc1
\par -s     \uc2\u22312 \'d4\'da\u27599 \'c3\'bf\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\u21518 \'ba\'f3\u36755 \'ca\'e4\u20986 \'b3\'f6\u35813 \'b8\'c3\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u22823 \'b4\'f3\u23567 \'d0\'a1\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -t     \uc2\u20197 \'d2\'d4\u26102 \'ca\'b1\u38388 \'bc\'e4\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -u     \uc2\u20197 \'d2\'d4\u25991 \'ce\'c4\u20214 \'bc\'fe\u19978 \'c9\'cf\u27425 \'b4\'ce\u34987 \'b1\'bb\u35775 \'b7\'c3\u38382 \'ce\'ca\u30340 \'b5\'c4\u26102 \'ca\'b1\u38388 \'bc\'e4\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf3 -x     \uc2\u25353 \'b0\'b4\u21015 \'c1\'d0\u36755 \'ca\'e4\u20986 \'b3\'f6\u65292 \'a3\'ac\u27178 \'ba\'e1\u21521 \'cf\'f2\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\u40664 \'c4\'ac\u35748 \'c8\'cf\u26159 \'ca\'c7\u32437 \'d7\'dd\u21521 \'cf\'f2\u25490 \'c5\'c5\u21015 \'c1\'d0\u30340 \'b5\'c4\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -A     \uc2\u26174 \'cf\'d4\u31034 \'ca\'be\u38500 \'b3\'fd \ldblquote .\rdblquote \u21644 \'ba\'cd\ldblquote ..\rdblquote \u22806 \'cd\'e2\u30340 \'b5\'c4\u25152 \'cb\'f9\u26377 \'d3\'d0\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par -B     \uc2\u19981 \'b2\'bb\u36755 \'ca\'e4\u20986 \'b3\'f6\u20197 \'d2\'d4 \ldblquote ~\rdblquote \u32467 \'bd\'e1\u23614 \'ce\'b2\u30340 \'b5\'c4\u22791 \'b1\'b8\u20221 \'b7\'dd\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par -C     \uc2\u25353 \'b0\'b4\u21015 \'c1\'d0\u36755 \'ca\'e4\u20986 \'b3\'f6\u65292 \'a3\'ac\u32437 \'d7\'dd\u21521 \'cf\'f2\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\uc1
\par -G     \uc2\u36755 \'ca\'e4\u20986 \'b3\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u32452 \'d7\'e9\u30340 \'b5\'c4\u20449 \'d0\'c5\u24687 \'cf\'a2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -L     \uc2\u21015 \'c1\'d0\u20986 \'b3\'f6\u38142 \'c1\'b4\u25509 \'bd\'d3\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\u32780 \'b6\'f8\u19981 \'b2\'bb\u26159 \'ca\'c7\u38142 \'c1\'b4\u25509 \'bd\'d3\u21040 \'b5\'bd\u30340 \'b5\'c4\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -N     \uc2\u19981 \'b2\'bb\u38480 \'cf\'de\u21046 \'d6\'c6\u25991 \'ce\'c4\u20214 \'bc\'fe\u38271 \'b3\'a4\u24230 \'b6\'c8\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -Q     \uc2\u25226 \'b0\'d1\u36755 \'ca\'e4\u20986 \'b3\'f6\u30340 \'b5\'c4\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\u29992 \'d3\'c3\u21452 \'cb\'ab\u24341 \'d2\'fd\u21495 \'ba\'c5\u25324 \'c0\'a8\u36215 \'c6\'f0\u26469 \'c0\'b4\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf3 -R     \uc2\u21015 \'c1\'d0\u20986 \'b3\'f6\u25152 \'cb\'f9\u26377 \'d3\'d0\u23376 \'d7\'d3\u30446 \'c4\'bf\u24405 \'c2\'bc\u19979 \'cf\'c2\u30340 \'b5\'c4\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -S     \uc2\u20197 \'d2\'d4\u25991 \'ce\'c4\u20214 \'bc\'fe\u22823 \'b4\'f3\u23567 \'d0\'a1\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 -X     \uc2\u20197 \'d2\'d4\u25991 \'ce\'c4\u20214 \'bc\'fe\u30340 \'b5\'c4\u25193 \'c0\'a9\u23637 \'d5\'b9\u21517 \'c3\'fb(\u26368 \'d7\'ee\u21518 \'ba\'f3\u19968 \'d2\'bb\u20010 \'b8\'f6 . \u21518 \'ba\'f3\u30340 \'b5\'c4\u23383 \'d7\'d6\u31526 \'b7\'fb)\u25490 \'c5\'c5\u24207 \'d0\'f2\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20\cf1 -1     \uc2\u19968 \'d2\'bb\u34892 \'d0\'d0\u21482 \'d6\'bb\u36755 \'ca\'e4\u20986 \'b3\'f6\u19968 \'d2\'bb\u20010 \'b8\'f6\u25991 \'ce\'c4\u20214 \'bc\'fe\u12290 \'a1\'a3\uc1
\par \plain \f1\fs20 --color=no  \uc2\u19981 \'b2\'bb\u26174 \'cf\'d4\u31034 \'ca\'be\u24425 \'b2\'ca\u33394 \'c9\'ab\u25991 \'ce\'c4\u20214 \'bc\'fe\u21517 \'c3\'fb\uc1
\par \plain \f1\fs20\cf2 ------------------------------------------------------------------------------------------------------------------------------
\par \plain \f1\fs20 NAME
\par      \plain \f1\fs20\cf1   ls - list directory contents
\par \plain \f1\fs20 
\par SYNOPSIS
\par \plain \f1\fs20\cf1        ls [-CFRacdilqrtu1][-H | -L ][-fgmnopsx][file...]
\par \plain \f1\fs20 
\par DESCRIPTION
\par        For  each  operand  that  names a file of a type other than directory or symbolic link to a directory, ls shall write the
\par        name of the file as well as any requested, associated information.  For each operand that names a file of type directory,
\par        ls shall write the names of files contained within the directory as well as any requested, associated information. If one
\par        of the -d, -F, or -l options are specified, and one of the -H or -L options are not  specified,  for  each  operand  that
\par        names  a file of type symbolic link to a directory, ls shall write the name of the file as well as any requested, associ-
\par        ated information. If none of the -d, -F, or -l options are specified, or the -H or -L options  are  specified,  for  each
\par        operand  that  names  a file of type symbolic link to a directory, ls shall write the names of files contained within the
\par        directory as well as any requested, associated information.
\par 
\par        If no operands are specified, ls shall write the contents of the current directory. If more than one  operand  is  speci-
\par        fied,  ls shall write non-directory operands first; it shall sort directory and non-directory operands separately accord-
\par        ing to the collating sequence in the current locale.
\par 
\par        The ls utility shall detect infinite loops; that is, entering a previously visited directory that is an ancestor  of  the
\par        last  file encountered. When it detects an infinite loop, ls shall write a diagnostic message to standard error and shall
\par        either recover its position in the hierarchy or terminate.
\par 
\par OPTIONS
\par        The ls utility shall conform to the Base Definitions volume of IEEE Std 1003.1-2001, Section 12.2, Utility Syntax  Guide-
\par        lines.
\par 
\par        The following options shall be supported:
\par 
\par        -C     Write multi-text-column output with entries sorted down the columns, according to the collating sequence. The num-
\par               ber of text columns and the column separator characters are unspecified, but should be adapted to  the  nature  of
\par               the output device.
\par 
\par        -F     Do  not  follow  symbolic links named as operands unless the -H or -L options are specified. Write a slash ( '/' )
\par               immediately after each pathname that is a directory, an asterisk ( '*' ) after each that is executable, a vertical
\par               bar  (  '|' ) after each that is a FIFO, and an at sign ( '@' ) after each that is a symbolic link. For other file
\par               types, other symbols may be written.
\par 
\par        -H     If a symbolic link referencing a file of type directory is specified on the command line, ls  shall  evaluate  the
\par               file  information  and file type to be those of the file referenced by the link, and not the link itself; however,
\par               ls shall write the name of the link itself and not the file referenced by the link.
\par 
\par        -L     Evaluate the file information and file type for all symbolic links (whether named on the command line  or  encoun-
\par               tered  in  a  file hierarchy) to be those of the file referenced by the link, and not the link itself; however, ls
\par               shall write the name of the link itself and not the file referenced by the link. When -L is used  with  -l,  write
\par               the contents of symbolic links in the long format (see the STDOUT section).
\par 
\par \plain \f1\fs20\cf3        -R     Recursively list subdirectories encountered.
\par \plain \f1\fs20 
\par        -a     Write out all directory entries, including those whose names begin with a period ( '.' ). Entries beginning with a
\par               period shall not be written out unless explicitly referenced, the -a option is  supplied,  or  an  implementation-
\par               defined condition shall cause them to be written.
\par 
\par        -c     Use  time of last modification of the file status information (see <sys/stat.h> in the System Interfaces volume of
\par               IEEE Std 1003.1-2001) instead of last modification of the file itself for sorting ( -t) or writing ( -l).
\par 
\par        -d     Do not follow symbolic links named as operands unless the -H or -L options are specified. Do not treat directories
\par               differently than other types of files. The use of -d with -R produces unspecified results.
\par 
\par        -f     Force  each argument to be interpreted as a directory and list the name found in each slot. This option shall turn
\par               off -l, -t, -s, and -r, and shall turn on -a; the order is the order in which entries appear in the directory.
\par 
\par        -g     The same as -l, except that the owner shall not be written.
\par 
\par        -i     For  each  file,  write  the  file's  file  serial  number  (see  stat()  in  the  System  Interfaces  volume   of
\par               IEEE Std 1003.1-2001).
\par 
\par        -l     (The  letter ell.) Do not follow symbolic links named as operands unless the -H or -L options are specified. Write
\par               out in long format (see the STDOUT section). When -l (ell) is specified, -1 (one) shall be assumed.
\par 
\par        -m     Stream output format; list files across the page, separated by commas.
\par 
\par        -n     The same as -l, except that the owner's UID and GID numbers shall be written, rather than the associated character
\par               strings.
\par 
\par        -o     The same as -l, except that the group shall not be written.
\par 
\par        -p     Write a slash ( '/' ) after each filename if that file is a directory.
\par 
\par        -q     Force  each  instance  of  non-printable filename characters and <tab>s to be written as the question-mark ( '?' )
\par               character. Implementations may provide this option by default if the output is to a terminal device.
\par 
\par        -r     Reverse the order of the sort to get reverse collating sequence or oldest first.
\par 
\par        -s     Indicate the total number of file system blocks consumed by each file displayed. The block size is implementation-
\par               defined.
\par 
\par        -t     Sort  with the primary key being time modified (most recently modified first) and the secondary key being filename
\par               in the collating sequence.
\par 
\par        -u     Use time of last access (see <sys/stat.h>) instead of last modification of the file for sorting ( -t) or writing (
\par               -l).
\par 
\par        -x     The same as -C, except that the multi-text-column output is produced with entries sorted across, rather than down,
\par               the columns.
\par 
\par        -1     (The numeric digit one.) Force output to be one entry per line.
\par 
\par 
\par        Specifying more than one of the options in the following mutually-exclusive pairs shall not be considered  an  error:  -C
\par        and  -l  (ell),    -m and -l (ell), -x and -l (ell),  -C and -1 (one), -H and -L, -c and -u. The last option specified in
\par        each pair shall determine the output format.
\par 
\par OPERANDS
\par        The following operand shall be supported:
\par 
\par        file   A pathname of a file to be written. If the file specified is not found, a diagnostic message shall  be  output  on
\par               standard error.
\par 
\par STDIN
\par        Not used.
\par 
\par INPUT FILES
\par        None.
\par 
\par ENVIRONMENT VARIABLES
\par        The following environment variables shall affect the execution of ls:
\par 
\par        COLUMNS
\par               Determine  the  user's  preferred  column position width for writing multiple text-column output. If this variable
\par               contains a string representing a decimal integer, the ls utility shall calculate how many pathname text columns to
\par               write  (see -C) based on the width provided. If COLUMNS is not set or invalid, an implementation-defined number of
\par               column positions shall be assumed, based on the implementation's knowledge of the output device. The column  width
\par               chosen  to  write the names of files in any given directory shall be constant. Filenames shall not be truncated to
\par               fit into the multiple text-column output.
\par 
\par        LANG   Provide a default value for the internationalization variables that are unset or null. (See the  Base  Definitions
\par               volume  of  IEEE Std 1003.1-2001, Section 8.2, Internationalization Variables for the precedence of international-
\par               ization variables used to determine the values of locale categories.)
\par 
\par        LC_ALL If set to a non-empty string value, override the values of all the other internationalization variables.
\par 
\par        LC_COLLATE
\par 
\par               Determine the locale for character collation information in determining the pathname collation sequence.
\par 
\par        LC_CTYPE
\par               Determine the locale for the interpretation of sequences of bytes of text data as characters (for example, single-
\par               byte  as  opposed  to multi-byte characters in arguments) and which characters are defined as printable (character
\par               class print).
\par 
\par        LC_MESSAGES
\par               Determine the locale that should be used to affect the format and contents of diagnostic messages written to stan-
\par               dard error.
\par 
\par        LC_TIME
\par               Determine the format and contents for date and time strings written by ls.
\par 
\par        NLSPATH
\par               Determine the location of message catalogs for the processing of LC_MESSAGES .
\par 
\par        TZ     Determine  the  timezone  for date and time strings written by ls.  If TZ is unset or null, an unspecified default
\par               timezone shall be used.
\par 
\par 
\par ASYNCHRONOUS EVENTS
\par        Default.
\par 
\par STDOUT
\par        The default format shall be to list one entry per line to standard output; the exceptions are to terminals or when one of
\par        the -C,   -m, or -x  options is specified. If the output is to a terminal, the format is implementation-defined.
\par 
\par        When -m is specified, the format used shall be:
\par               "%s, %s, ...\\n", <filename1>, <filename2>
\par 
\par        where the largest number of filenames shall be written without exceeding the length of the line.
\par 
\par        If  the -i option is specified, the file's file serial number (see <sys/stat.h>) shall be written in the following format
\par        before any other output for the corresponding entry:
\par               %u ", <file serial number>
\par 
\par        If the -l option is specified without -L, the following information shall be written:
\par               "%s %u %s %s %u %s %s\\n", <file mode>, <number of links>,
\par                   <owner name>, <group name>, <number of bytes in the file>,
\par                   <date and time>, <pathname>
\par 
\par        If the file is a symbolic link, this information shall be about the link itself and the <pathname> field shall be of  the
\par        form:
\par               "%s -> %s", <pathname of link>, <contents of link>
\par 
\par        If both -l and -L are specified, the following information shall be written:
\par               "%s %u %s %s %u %s %s\\n", <file mode>, <number of links>,
\par                   <owner name>, <group name>, <number of bytes in the file>,
\par                   <date and time>, <pathname of link>
\par 
\par        where all fields except <pathname of link> shall be for the file resolved from the symbolic link.
\par 
\par        The  -g,  -n,  and  -o  options  use the same format as -l, but with omitted items and their associated <blank>s. See the
\par        OPTIONS section.
\par 
\par        In both the preceding -l forms, if <owner name> or <group name> cannot be determined,  or if -n is given,  they shall  be
\par        replaced with their associated numeric values using the format %u .
\par 
\par        The  <date and time>  field  shall  contain the appropriate date and timestamp of when the file was last modified. In the
\par        POSIX locale, the field shall be the equivalent of the output of the following date command:
\par               date "+%b %e %H:%M"
\par 
\par        if the file has been modified in the last six months, or:
\par               date "+%b %e %Y"
\par 
\par        (where two <space>s are used between %e and %Y ) if the file has not been modified in the last six months or if the modi-
\par        fication  date  is  in the future, except that, in both cases, the final <newline> produced by date shall not be included
\par        and the output shall be as if the date command were executed at the time of the last modification date of the file rather
\par        than  the  current time. When the LC_TIME locale category is not set to the POSIX locale, a different format and order of
\par        presentation of this field may be used.
\par 
\par        If the file is a character special or block special file, the size of the  file  may  be  replaced  with  implementation-
\par        defined information associated with the device in question.
\par 
\par        If the pathname was specified as a file operand, it shall be written as specified.
\par 
\par        The file mode written under the -l,   -g, -n, and -o  options shall consist of the following format:
\par               "%c%s%s%s%c", <entry type>, <owner permissions>,
\par                   <group permissions>, <other permissions>,
\par                   <optional alternate access method flag>
\par 
\par        The  <optional alternate access method flag> shall be a single <space> if there is no alternate or additional access con-
\par        trol method associated with the file; otherwise, a printable character shall be used.
\par 
\par        The <entry type> character shall describe the type of file, as follows:
\par        d      Directory.
\par        b      Block special file.
\par        c      Character special file.
\par        l (ell)
\par               Symbolic link.
\par        p      FIFO.
\par        -      Regular file.
\par 
\par        Implementations may add other characters to this list to represent other implementation-defined file types.
\par 
\par        The next three fields shall be three characters each:
\par        <owner permissions>
\par               Permissions for the file owner class (see the Base Definitions volume of IEEE Std 1003.1-2001, Section  4.4,  File
\par               Access Permissions).
\par 
\par        <group permissions>
\par               Permissions for the file group class.
\par 
\par        <other permissions>
\par               Permissions for the file other class.
\par 
\par        Each field shall have three character positions:
\par         1. If 'r', the file is readable; if '-', the file is not readable.
\par 
\par         2. If 'w', the file is writable; if '-', the file is not writable.
\par 
\par         3. The first of the following that applies:
\par        S
\par               If  in <owner permissions>, the file is not executable and set-user-ID mode is set. If in <group permissions>, the
\par               file is not executable and set-group-ID mode is set.
\par        s
\par               If in <owner permissions>, the file is executable and set-user-ID mode is set. If in <group permissions>, the file
\par               is executable and set-group-ID mode is set.
\par        T
\par               If  in  <other permissions>  and  the  file  is  a  directory, search permission is not granted to others, and the
\par               restricted deletion flag is set.
\par        t
\par               If in <other permissions> and the file is a directory, search permission is granted to others, and the  restricted
\par               deletion flag is set.
\par        x
\par               The file is executable or the directory is searchable.
\par        -
\par               None of the attributes of 'S', 's', 'T', 't', or 'x' applies.
\par 
\par        Implementations may add other characters to this list for the third character position. Such additions shall, however, be
\par        written in lowercase if the file is executable or searchable, and in uppercase if it is not.
\par 
\par 
\par        If any of the -l,   -g, -n, -o, or -s options is specified, each list of files within the directory shall be preceded  by
\par        a  status  line indicating the number of file system blocks occupied by files in the directory in 512-byte units, rounded
\par        up to the next integral number of units, if necessary. In the POSIX locale, the format shall be:
\par 
\par               "total %u\\n", <number of units in the directory>
\par 
\par        If more than one directory, or a combination of non-directory files and directories are written, either as  a  result  of
\par        specifying multiple operands, or the -R option, each list of files within a directory shall be preceded by:
\par 
\par               "\\n%s:\\n", <directory name>
\par 
\par        If  this string is the first thing to be written, the first <newline> shall not be written. This output shall precede the
\par        number of units in the directory.
\par 
\par        If the -s option is given, each file shall be written with the number of blocks used by the file. Along with -C, -1,  -m,
\par        or -x, the number and a <space> shall precede the filename; with -g, -l, -n, or -o, they shall precede each line describ-
\par        ing a file.
\par 
\par STDERR
\par        The standard error shall be used only for diagnostic messages.
\par 
\par OUTPUT FILES
\par        None.
\par 
\par EXTENDED DESCRIPTION
\par        None.
\par 
\par EXIT STATUS
\par        The following exit values shall be returned:
\par         0     Successful completion.
\par        >0     An error occurred.
\par 
\par CONSEQUENCES OF ERRORS
\par        Default.
\par        The following sections are informative.
\par 
\par APPLICATION USAGE
\par        Many implementations use the equal sign ( '=' ) to denote sockets bound to the file system for the -F option.  Similarly,
\par        many historical implementations use the 's' character to denote sockets as the entry type characters for the -l option.
\par 
\par        It is difficult for an application to use every part of the file modes field of ls -l in a portable manner.  Certain file
\par        types and executable bits are not guaranteed to be exactly as shown, as implementations may  have  extensions.   Applica-
\par        tions  can  use this field to pass directly to a user printout or prompt, but actions based on its contents should gener-
\par        ally be deferred, instead, to the test utility.
\par 
\par        The output of ls (with the -l and related options) contains information that logically could be used by utilities such as
\par        chmod and touch to restore files to a known state. However, this information is presented in a format that cannot be used
\par        directly by those utilities or be easily translated into a format that can be used. A character has been added to the end
\par        of  the  permissions  string so that applications at least have an indication that they may be working in an area they do
\par        not understand instead of assuming that they can translate the permissions string into something that can be used. Future
\par        issues  or related documents may define one or more specific characters to be used based on different standard additional
\par        or alternative access control mechanisms.
\par 
\par        As with many of the utilities that deal with filenames, the output of ls for multiple files or in one of the long listing
\par        formats  must  be used carefully on systems where filenames can contain embedded white space. Systems and system adminis-
\par        trators should institute policies and user training to limit the use of such filenames.
\par 
\par        The number of disk blocks occupied by the file that it reports varies depending on underlying  file  system  type,  block
\par        size  units  reported,  and  the method of calculating the number of blocks. On some file system types, the number is the
\par        actual number of blocks occupied by the file (counting indirect blocks and ignoring holes in the file); on others  it  is
\par        calculated based on the file size (usually making an allowance for indirect blocks, but ignoring holes).
\par 
\par EXAMPLES
\par        An example of a small directory tree being fully listed with ls -laRF a in the POSIX locale:
\par               total 11
\par               drwxr-xr-x   3 hlj      prog          64 Jul  4 12:07 ./
\par               drwxrwxrwx   4 hlj      prog        3264 Jul  4 12:09 ../
\par               drwxr-xr-x   2 hlj      prog          48 Jul  4 12:07 b/
\par               -rwxr--r--   1 hlj      prog         572 Jul  4 12:07 foo*
\par 
\par               a/b:
\par               total 4
\par               drwxr-xr-x   2 hlj      prog          48 Jul  4 12:07 ./
\par               drwxr-xr-x   3 hlj      prog          64 Jul  4 12:07 ../
\par               -rw-r--r--   1 hlj      prog         700 Jul  4 12:07 bar
\par 
\par RATIONALE
\par        Some historical implementations of the ls utility show all entries in a directory except dot and dot-dot when a superuser
\par        invokes ls without specifying the -a option. When "normal" users invoke ls without specifying -a,  they  should  not  see
\par        information about any files with names beginning with a period unless they were named as file operands.
\par 
\par        Implementations  are  expected  to  traverse arbitrary depths when processing the -R option. The only limitation on depth
\par        should be based on running out of physical storage for keeping track of untraversed directories.
\par 
\par        The -1 (one) option was historically found in BSD and BSD-derived implementations only. It is required in this volume  of
\par        IEEE Std 1003.1-2001  so  that conforming applications might ensure that output is one entry per line, even if the output
\par        is to a terminal.
\par 
\par        Generally, this volume of IEEE Std 1003.1-2001 is silent about what happens when options are given multiple times. In the
\par        cases  of  -C, -l, and -1, however, it does specify the results of these overlapping options. Since ls is one of the most
\par        aliased commands, it is important that the implementation perform intuitively. For example, if the alias were:
\par               alias ls="ls -C"
\par 
\par        and the user typed ls -1, single-text-column output should result, not an error.
\par 
\par        The BSD ls provides a -A option (like -a, but dot and dot-dot are not written out). The small difference from -a did  not
\par        seem important enough to require both.
\par 
\par        Implementations  may  make  -q the default for terminals to prevent trojan horse attacks on terminals with special escape
\par        sequences. This is not required because:
\par 
\par         * Some control characters may be useful on some terminals; for example, a system might write them as "\\001" or "^A" .
\par 
\par         * Special behavior for terminals is not relevant to applications portability.
\par 
\par        An early proposal specified that the optional alternate access method flag had to be '+' if there was an alternate access
\par        method  used  on the file or <space> if there was not. This was changed to be <space> if there is not and a single print-
\par        able character if there is. This was done for three reasons:
\par         1. There are historical implementations using characters other than '+' .
\par 
\par         2. There are implementations that vary this character used in that position to  distinguish  between  various  alternate
\par            access methods in use.
\par 
\par         3. The standard developers did not want to preclude future specifications that might need a way to specify more than one
\par            alternate access method.
\par 
\par 
\par        Nonetheless, implementations providing a single alternate access method are encouraged to use '+' .
\par 
\par        In an early proposal, the units used to specify the number of blocks occupied by files in a directory in an ls -l listing
\par        were  implementation-defined.  This  was  because BSD systems have historically used 1024-byte units and System V systems
\par        have historically used 512-byte units. It was pointed out by BSD developers that their system has used 512-byte units  in
\par        some  places  and  1024-byte  units  in  other  places.  (System V has consistently used 512.)  Therefore, this volume of
\par        IEEE Std 1003.1-2001 usually specifies 512. Future releases of BSD are expected to consistently provide 512  bytes  as  a
\par        default with a way of specifying 1024-byte units where appropriate.
\par 
\par        The  <date and time> field in the -l format is specified only for the POSIX locale. As noted, the format can be different
\par        in other locales. No mechanism for defining this is present in this volume of IEEE Std 1003.1-2001,  as  the  appropriate
\par        vehicle is a messaging system; that is, the format should be specified as a "message".
\par \plain \f1\fs20\cf2 ------------------------------------------------------------------------------------------------------------------------------\par}