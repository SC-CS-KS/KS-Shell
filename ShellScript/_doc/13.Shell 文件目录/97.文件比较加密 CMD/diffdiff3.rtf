{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil\fcharset2 Symbol;}}{\colortbl;\red0\green0\blue255;\red255\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1702409659\listsimple1
{\listlevel\levelnfc23\leveljc0\li720\fi-360\jclisttab\tx720{\leveltext\'01\uc2\u183 \'a1\'a4\uc1;}{\levelnumbers;}\f3\fs24\lang1024}
\listid1190165675}
}
{\*\listoverridetable
{\listoverride\listid1190165675\listoverridecount0\ls1}
}


\pard\fi420\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf3 diff/diff3
\par \pard\fi420\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 NAME
\par \plain \f1\fs20\cf1        diff - compare files line by line
\par \plain \f1\fs20 
\par SYNOPSIS
\par        diff [OPTION]... FILES
\par 
\par DESCRIPTION
\par        Compare files line by line.
\par 
\par        -i  --ignore-case
\par \plain \f1\fs20\cf1               Ignore case differences in file contents.
\par \plain \f1\fs20 
\par        --ignore-file-name-case
\par               Ignore case when comparing file names.
\par 
\par        --no-ignore-file-name-case
\par               Consider case when comparing file names.
\par 
\par        -E  --ignore-tab-expansion
\par               Ignore changes due to tab expansion.
\par 
\par        -b  --ignore-space-change
\par \plain \f1\fs20\cf1               Ignore changes in the amount of white space.
\par \plain \f1\fs20 
\par        -w  --ignore-all-space
\par \plain \f1\fs20\cf1               Ignore all white space.
\par \plain \f1\fs20 
\par        -B  --ignore-blank-lines
\par               Ignore changes whose lines are all blank.
\par 
\par        -I RE  --ignore-matching-lines=RE
\par               Ignore changes whose lines all match RE.
\par 
\par        --strip-trailing-cr
\par               Strip trailing carriage return on input.
\par 
\par        -a  --text
\par \plain \f1\fs20\cf1               Treat all files as text.
\par \plain \f1\fs20 
\par \plain \f1\fs20\cf2        -c  -C NUM  --context[=NUM]
\par               Output NUM (default 3) lines of copied context.
\par \plain \f1\fs20 
\par        -u  -U NUM  --unified[=NUM]
\par               Output NUM (default 3) lines of unified context.
\par 
\par        --label LABEL
\par               Use LABEL instead of file name.
\par 
\par        -p  --show-c-function
\par               Show which C function each change is in.
\par 
\par        -F RE  --show-function-line=RE
\par               Show the most recent line matching RE.
\par 
\par        -q  --brief
\par \plain \f1\fs20\cf1               Output only whether files differ.
\par \plain \f1\fs20 
\par        -e  --ed
\par               Output an ed script.
\par 
\par        --normal
\par               Output a normal diff.
\par 
\par        -n  --rcs
\par               Output an RCS format diff.
\par 
\par        -y  --side-by-side
\par               Output in two columns.
\par 
\par        -W NUM  --width=NUM
\par               Output at most NUM (default 130) print columns.
\par 
\par        --left-column
\par               Output only the left column of common lines.
\par 
\par        --suppress-common-lines
\par               Do not output common lines.
\par 
\par        -D NAME  --ifdef=NAME
\par               Output merged file to show `#ifdef NAME' diffs.
\par 
\par        --GTYPE-group-format=GFMT
\par               Similar, but format GTYPE input groups with GFMT.
\par 
\par        --line-format=LFMT
\par               Similar, but format all input lines with LFMT.
\par 
\par        --LTYPE-line-format=LFMT
\par               Similar, but format LTYPE input lines with LFMT.
\par 
\par        LTYPE is `old', `new', or `unchanged'.
\par               GTYPE is LTYPE or `changed'.
\par 
\par               GFMT may contain:
\par 
\par        %<     lines from FILE1
\par 
\par        %>     lines from FILE2
\par 
\par        %=     lines common to FILE1 and FILE2
\par 
\par        %[-][WIDTH][.[PREC]]\{doxX\}LETTER
\par               printf-style spec for LETTER
\par 
\par               LETTERs are as follows for new group, lower case for old group:
\par 
\par        F      first line number
\par 
\par        L      last line number
\par 
\par        N      number of lines = L-F+1
\par 
\par        E      F-1
\par 
\par        M      L+1
\par 
\par               LFMT may contain:
\par 
\par        %L     contents of line
\par 
\par        %l     contents of line, excluding any trailing newline
\par 
\par        %[-][WIDTH][.[PREC]]\{doxX\}n
\par               printf-style spec for input line number
\par 
\par               Either GFMT or LFMT may contain:
\par 
\par        %%     %
\par 
\par        %c'C'  the single character C
\par 
\par        %c'\\OOO'
\par               the character with octal code OOO
\par 
\par        -l  --paginate
\par               Pass the output through `pr' to paginate it.
\par 
\par        -t  --expand-tabs
\par               Expand tabs to spaces in output.
\par 
\par        -T  --initial-tab
\par               Make tabs line up by prepending a tab.
\par 
\par        --tabsize=NUM
\par               Tab stops are every NUM (default 8) print columns.
\par 
\par        --suppress-blank-empty
\par               Suppress space or tab before empty output lines.
\par 
\par        -r  --recursive
\par               Recursively compare any subdirectories found.
\par 
\par        -N  --new-file
\par               Treat absent files as empty.
\par 
\par        --unidirectional-new-file
\par               Treat absent first files as empty.
\par 
\par        -s  --report-identical-files
\par               Report when two files are the same.
\par 
\par        -x PAT  --exclude=PAT
\par               Exclude files that match PAT.
\par 
\par        -X FILE  --exclude-from=FILE
\par               Exclude files that match any pattern in FILE.
\par 
\par        -S FILE  --starting-file=FILE
\par               Start with FILE when comparing directories.
\par 
\par        --from-file=FILE1
\par               Compare FILE1 to all operands.  FILE1 can be a directory.
\par 
\par        --to-file=FILE2
\par               Compare all operands to FILE2.  FILE2 can be a directory.
\par 
\par        --horizon-lines=NUM
\par               Keep NUM lines of the common prefix and suffix.
\par 
\par        -d  --minimal
\par               Try hard to find a smaller set of changes.
\par 
\par        --speed-large-files
\par               Assume large files and many scattered small changes.
\par 
\par        -v  --version
\par               Output version info.
\par 
\par        --help Output this help.
\par 
\par        FILES  are  `FILE1  FILE2' or `DIR1 DIR2' or `DIR FILE...' or `FILE... DIR'.  If --from-file or --to-file is given, there
\par        are no restrictions on FILES.  If a FILE is `-', read standard input.  Exit status is 0 if inputs are the same, 1 if dif-
\par        ferent, 2 if trouble.\par}