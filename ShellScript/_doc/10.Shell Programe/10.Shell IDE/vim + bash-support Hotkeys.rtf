{\rtf1\fbidis\ansi\ansicpg0\uc1\deff0\deflang0\deflangfe0{\fonttbl{\f0\fnil \'cb\'ce\'cc\'e5;}{\f1\fnil \'ce\'a2\'c8\'ed\'d1\'c5\'ba\'da;}{\f2\fnil\fcharset134 \'cb\'ce\'cc\'e5;}{\f3\fnil\fcharset0 Times New Roman;}}{\colortbl;\red0\green0\blue255;\red0\green0\blue0;\red79\green129\blue189;\red255\green255\blue255;}{\*\listtable{\list\listtemplateid1425277571
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\b\i\fs28}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
{\listlevel\levelnfc0\leveljc0\li0\fi0\jclisttab\tx0\levelstartat1{\leveltext\'00;}{\levelnumbers;}\f3\fs24}
\listid774904980}
{\list\listtemplateid1045504230\listsimple1
{\listlevel\levelnfc0\leveljc0\li1380\fi-420\jclisttab\tx1380\levelstartat1{\leveltext\'02\'00);}{\levelnumbers\'01;}\f3\b\i\fs24\cf3}
\listid1271185538}
}
{\*\listoverridetable
{\listoverride\listid774904980\listoverridecount0\ls1}
{\listoverride\listid1271185538\listoverridecount0\ls2}
}


\pard\fi0\li0\qc\ri0\sb0\sa0\itap0 \plain \f2\b\lang2052\fs24\cf2 vim + bash-support Hotkeys
\par \pard\fi0\li0\ql\ri0\sb0\sa0\itap0 
\par \plain \f1\fs20 -- bash help ------------------------------------------
\par      \\hb     Displays the Bash manual         (n, i)
\par      \\hh     Displays help for the builtin    (n, i)
\par              under the cursor (Bash help).
\par              The tab expansion is active.
\par      \\hm     displays the manual for the      (n, i)
\par              Bash command under the cursor
\par              The tab expansion is active.
\par      \\hbs    Displays the Vim help page for   (n, i)
\par              this plugin.
\par 
\par   -- Comments -------------------------------------------
\par   [n]\\cl     line end comment                 (n, i, v)
\par   [n]\\cj     adjust end-of-line comments      (n, i, v)
\par      \\cs     set end-of-line comment column   (n)
\par      \\cfr    frame comment                    (n, i)
\par      \\cfu    function description             (n, i)
\par      \\ch     file header                      (n, i)
\par      \\ckb    keyword comment BUG              (n, i)
\par      \\ckt    keyword comment TODO             (n, i)
\par      \\ckr    keyword comment TRICKY           (n, i)
\par      \\ckw    keyword comment WARNING          (n, i)
\par      \\ckn    keyword comment New_Keyword      (n, i)
\par   [n]\\cc     toggle comment                   (n, i, v)
\par      \\cd     date                             (n, i, v)
\par      \\ct     date & time                      (n, i, v)
\par      \\ce     echo "..."                       (n, i)
\par      \\cr     remove echo "..."                (n, i)
\par      \\css    script sections (tab completion) (n, i)
\par      \\ckc    keyword comments(tab completion) (n, i)
\par      \\cv     vim modeline                     (n, i)
\par 
\par   -- Statements ------------------------------------------
\par      \\sc     case in ... esac                 (n, i)
\par      \\sei    elif then                        (n, i)
\par      \\sf     for in do done                   (n, i, v)
\par      \\sfo    for ((...)) do done              (n, i, v)
\par      \\si     if then fi                       (n, i, v)
\par      \\sie    if then else fi                  (n, i, v)
\par      \\ss     select in do done                (n, i, v)
\par      \\su     until do done                    (n, i, v)
\par      \\sw     while do done                    (n, i, v)
\par      \\sfu    function                         (n, i, v)
\par      \\se     echo -e "..."                    (n, i, v)
\par      \\sp     printf "..."                     (n, i, v)
\par      \\sa     array element $\{.[.]\}            (n, i, v)
\par      \\saa    array elements $\{.[@]\}           (n, i, v)
\par      \\sa1    array elements, 1 word $\{.[*]\}   (n, i, v)
\par      \\ssa    subarray $\{.[@]::\}               (n, i, v)
\par      \\san    no. of array elements $\{#.[@]\}   (n, i, v)
\par      \\sai    list of arr. indices $\{!.[*]\}    (n, i, v)
\par 
\par   -- Snippets --------------------------------------------
\par      \\nr     read code snippet                (n, i)
\par      \\nw     write code snippet               (n, v, i)
\par      \\ne     edit code snippet                (n, i)
\par 
\par      \\ntl    edit local templates             (n, i)
\par      \\ntg    edit global templates            (n, i)
\par      \\ntr    reread the templates             (n, i)
\par      \\nts    switch template style            (n, i)
\par 
\par   -- Test ------------------------------------------------
\par      \\t1     unary operator, 1 arg.: \\verb'[ -  ]'  (n, i)
\par      \\t2     binary operator, 2 arg: \\verb'[  -  ]' (n, i)
\par 
\par   -- Regular Expression ----------------------------------
\par      \\xm     [[  =~  ]]                      (n, i)
\par 
\par   -- POSIX Character Classes -----------------------------
\par      \\pan    [:alnum:]                        (n, i)
\par      \\pal    [:alpha:]                        (n, i)
\par      \\pas    [:ascii:]                        (n, i)
\par      \\pb     [:blank:]                        (n, i)
\par      \\pc     [:cntrl:]                        (n, i)
\par      \\pd     [:digit:]                        (n, i)
\par      \\pg     [:graph:]                        (n, i)
\par      \\pl     [:lower:]                        (n, i)
\par      \\ppr    [:print:]                        (n, i)
\par      \\ppu    [:punct:]                        (n, i)
\par      \\ps     [:space:]                        (n, i)
\par      \\pu     [:upper:]                        (n, i)
\par      \\pw     [:word:]                         (n, i)
\par      \\px     [:xdigit:]                       (n, i)
\par 
\par   -- Run -------------------------------------------------
\par      \\rr     update file, run script          (n, i)
\par      \\ra     set script cmd. line arguments   (n, i)
\par      \\rba    set Bash cmd. line arguments     (n, i)
\par      \\rc     update file, check syntax        (n, i)
\par      \\rco    syntax check options             (n, i)
\par      \\rd     start debugger                   (n, i)
\par      \\re     make script executable           (n, i)
\par      \\rh     hardcopy buffer to FILENAME.ps   (n, i)
\par      \\rs     settings and hot keys            (n, i)
\par      \\rt     set xterm size                   (n, i)
\par      \\ro     change output destination        (n, i)
\par 
\par   -- Load / Unload bash Support --------------------------
\par      \\lbs    Load Bash Support                (n, GUI only)
\par      \\ubs    Unload Bash Support              (n, GUI only)\par}